<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts | Jiannan Zhang</title><link>/post/</link><atom:link href="/post/index.xml" rel="self" type="application/rss+xml"/><description>Posts</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Wed, 11 Mar 2020 00:00:00 +0000</lastBuildDate><image><url>img/map[gravatar:%!s(bool=false) shape:circle]</url><title>Posts</title><link>/post/</link></image><item><title>Shiny Server</title><link>/post/shiny-server/</link><pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate><guid>/post/shiny-server/</guid><description>&lt;h2 id="单细胞数据展示">单细胞数据展示&lt;/h2>
&lt;p>最近一段时间，实验室测了不少单细胞数据，为了方便实验室成员预览数据和调用数据，之前利用Shiny在服务器后台运行&lt;code>Rscript XX.R&lt;/code>进行数据在线展示，但是现在一下子增加很多数据，就开始考虑部署服务器版的Shiny Server了。未发表数据肯定不能托管，而且数据量也较大，VPS那点能力也hold不了，最后决定在自己服务器上面部署。&lt;/p>
&lt;h3 id="需求单细胞数据实验室内部展示">需求：单细胞数据实验室内部展示&lt;/h3>
&lt;h3 id="下载安装shiny-server">下载安装Shiny Server&lt;/h3>
&lt;p>
&lt;a href="https://rstudio.com/products/shiny/shiny-server/" target="_blank" rel="noopener">官网安装&lt;/a>服务器版本，参考官网步骤即可，提前安装好&lt;code>R&lt;/code>和&lt;code>shiny&lt;/code>等包。&lt;/p>
&lt;pre>&lt;code class="language-r">sudo apt-get install gdebi-core
wget https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-1.5.13.944-amd64.deb
sudo gdebi shiny-server-1.5.13.944-amd64.deb
&lt;/code>&lt;/pre>
&lt;h3 id="软件参数调试">软件参数调试&lt;/h3>
&lt;pre>&lt;code class="language-R">#打开配置文件，nano是示例，现在直接VScode打开编辑即可。
大赞VScode！！！！！！VScode YES！！！！！
/etc/shiny-server/shiny-server.conf
# Instruct Shiny Server to run applications as the user &amp;quot;shiny&amp;quot;
# 我改成了自己的账户，不需要新建立一个&amp;quot;shiny&amp;quot;用户
run_as 自己的用户名;
access_log /var/log/shiny-server/access.log default; # 增加记录访问
preserve_logs true; # 禁止自动清除日志
# Define a server that listens on port 3838
# 中国人喜欢的8888，哈哈哈~~
server {
listen 8888;
# Define a location at the base URL
location / {
# Host the directory of Shiny Apps stored in this directory
site_dir /srv/shiny-server;
# Log all Shiny output to files in this directory
log_dir /var/log/shiny-server;
# When a user visits the base URL rather than a particular application,
# an index of the applications available in this directory will be shown.
directory_index on;
}
#指向app.R代码位置
location /demo1{ #/demo1 访问app.R的网址后缀
app_dir /home/uu/shinyapp/demo1; #app.R所在文件夹
log_dir /var/log/shiny-server/demo1;#app.R日志所在文件夹
}
#重启服务器
sudo systemctl restart shiny-server
#应用启动失败，一般是依赖包问题，好好查看报错信息
#日志
sudo cat /var/log/shiny-server/demo/
#重启
sudo systemctl restart shiny-server;
#文件配置
sudo vim /etc/shiny-server/shiny-server.conf
&lt;/code>&lt;/pre>
&lt;h3 id="服务器相关代码官网文档不要再打开">服务器相关代码，官网文档，不要再打开~&lt;/h3>
&lt;p>To start or stop the server manually, you can use the following commands.&lt;/p>
&lt;pre>&lt;code class="language-R">sudo systemctl start shiny-server
sudo systemctl stop shiny-server
&lt;/code>&lt;/pre>
&lt;p>You can restart the server with:&lt;/p>
&lt;pre>&lt;code class="language-R">sudo systemctl restart shiny-server
&lt;/code>&lt;/pre>
&lt;p>This command will shutdown all running Shiny processes, disconnect all open connections, and re-initialize the server.&lt;/p>
&lt;p>If you wish to reload the configuration but keep the server and all Shiny processes running without interruption, you can use the systemctl command to send a SIGHUP signal:&lt;/p>
&lt;pre>&lt;code class="language-R">sudo systemctl kill -s HUP --kill-who=main shiny-server
&lt;/code>&lt;/pre>
&lt;p>This will cause the server to re-initialize, but will not interrupt the current processes or any of the open connections to the server.&lt;/p>
&lt;p>You can check the status of the shiny-server service using:&lt;/p>
&lt;pre>&lt;code class="language-R">sudo systemctl status shiny-server
&lt;/code>&lt;/pre>
&lt;p>And finally, you can use the enable/disable commands to control whether Shiny Server should be run automatically at boot time:&lt;/p>
&lt;pre>&lt;code class="language-R">sudo systemctl enable shiny-server
sudo systemctl disable shiny-server
&lt;/code>&lt;/pre>
&lt;h3 id="shiny单独运行的代码备存">Shiny单独运行的代码备存&lt;/h3>
&lt;pre>&lt;code class="language-r">#! /usr/bin/env Rscript
setwd(&amp;quot;/home/labwang/Rstudio&amp;quot;)
options(repos=structure(c(CRAN=&amp;quot;https://mirrors.tuna.tsinghua.edu.cn/CRAN/&amp;quot;)))
library(shiny)
library(shinymanager)
runApp('/home/labwang/Rstudio/liver', port = 8887)
&lt;/code>&lt;/pre>
&lt;h3 id="页面调试">页面调试&lt;/h3>
&lt;p>确定代码没错，网页正常打开后，&lt;code>index.html&lt;/code>就根据自己的水平进行修改美化了，我就不停的删删删删了~~&lt;/p>
&lt;h3 id="参考资料">&lt;del>参考资料&lt;/del>&lt;/h3></description></item><item><title>Blogdown+Hugo+Github+Github Actions建立自动推送Blog</title><link>/post/blogdown-hugo-github-github-actions%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%8A%A8%E6%8E%A8%E9%80%81blog/</link><pubDate>Mon, 02 Mar 2020 00:00:00 +0000</pubDate><guid>/post/blogdown-hugo-github-github-actions%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%8A%A8%E6%8E%A8%E9%80%81blog/</guid><description>&lt;h2 id="使用-blogdownhugogithubgithub-actions博客">使用 Blogdown+Hugo+Github+Github Actions博客&lt;/h2>
&lt;p>之前使用Hexo建了个人主页，但是速度越来越慢，而且部署比较繁琐，最近学习R相关知识，发现Rmarkdown、Bookdown和Blogdown全家桶超级好用，所以与时俱进也升级了方案。&lt;/p>
&lt;ul>
&lt;li>Blogdown可以非常方便的使用Hugo进行操作，尤其是Rstudio高度集成，非常方便。&lt;/li>
&lt;li>Hugo就不多说了，神器。&lt;/li>
&lt;li>Github也不解释，之前Hexo也是利用的Github pages作为个人主页，现在加上可以实现自动部署的Github Actions则更加方便。&lt;/li>
&lt;/ul>
&lt;p>整体流程建立后非常方便进行更新，速度也很快，所以非常推荐，下面简单记录下关键步骤。&lt;/p>
&lt;h2 id="一建立github-pages">一、建立Github Pages&lt;/h2>
&lt;p>本流程一共需要在Github账号里建立两个Repository，第一个是用于发布页面的仓库名必须为 [你的用户名].github.io，使用 master 分支，也是用于Github Pages的Repository，可以自定义域名，为了这个自定义域名可以用于Github系列网站，也就没有采用Blogdown的推荐流程。&lt;/p>
&lt;h2 id="二建立hugo文章仓库">二、建立Hugo文章仓库&lt;/h2>
&lt;p>为了实现自动部署，我们还需要建立一个命名随便（如MyBlog）的Repository用于储存Blog的原始文档，之后利用Github Actions自动部署推送到XXX.github.io中进行发布。&lt;/p>
&lt;h2 id="三部署github-actions-脚本">三、部署Github Actions 脚本&lt;/h2>
&lt;p>基本知识随便google就有了，利用别人的轮子，编辑yml文件，编写自己的workflow。&lt;/p>
&lt;pre>&lt;code class="language-yml">name: CI #自动化的名称
on:
push: # push的时候触发
branches: # 那些分支需要触发
- master
jobs:
build:
runs-on: ubuntu-latest # 镜像市场
steps:
- name: checkout # 步骤的名称
uses: actions/checkout@v1 #软件市场的名称
with: # 参数
submodules: true
- name: Setup Hugo
uses: peaceiris/actions-hugo@v2.2.2
with:
hugo-version: '0.65.3'
extended: true
- name: Build
run: hugo --minify
- name: Deploy
uses: peaceiris/actions-gh-pages@v2.5.1
env:
ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
EXTERNAL_REPOSITORY: 你的用户名/你的用户名.github.io
PUBLISH_BRANCH: master
PUBLISH_DIR: ./public
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>注意替换&lt;strong>你的用户名&lt;/strong>以及&lt;strong>hugo的版本号&lt;/strong>。&lt;/p>
&lt;/blockquote>
&lt;h2 id="四部署工作">四、部署工作&lt;/h2>
&lt;p>在VScode中的Powershell中输入密钥生成指令，提交到Github，实现两个仓库的关联，页面填写时注意修改名称为&lt;code>ACTIONS_DEPLOY_KEY&lt;/code>。&lt;/p>
&lt;pre>&lt;code class="language-shell">ssh-keygen -t rsa -b 4096 -C &amp;quot;$(git config user.email)&amp;quot; -f gh-pages -N &amp;quot;&amp;quot;
# 你会得到以下这两个文件:
# gh-pages.pub (public key) for .github.io 发布仓库
# gh-pages (private key) for myBlog 储存仓库
&lt;/code>&lt;/pre>
&lt;h2 id="五提交代码自动部署">五、提交代码自动部署&lt;/h2>
&lt;p>之后只需要push本地的Blog文件至储存仓库，Actions就会自动利用Hugo进行public文件编译，之后推送至github.io仓库，利用Github pages进行发布，实现全自动操作，只需要将本地文件push到储存仓库即可。&lt;/p>
&lt;p>push可以写一个脚本&lt;code>deploy.sh&lt;/code>&lt;/p>
&lt;pre>&lt;code class="language-shell">#!/bin/sh
# 哈哈，我把文件放置OneDrive里面的，算是备份吧，主要是换电脑可以非常方便的同步。
cd D:\OneDrive\git\MyBlog\
# 建立本地仓库
git init
# 关联到Github仓库
git remote add origin git@github.com:你的用户名/Blog.git
# 把目录下所有文件更改状况提交到暂存区
git add .
# 提交更改的说明
git commit -m &amp;quot;Blog update&amp;quot;
# 开始推送到Github
git push -u origin master
exit 0
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>Tips：在Hugo文件content目录下新建一个CNAME文件（无任何后缀），内容为自定义域名，这样编译时会自动将CNAME文件生成至github.io根目录，不用每次部署后重新设置自定义域名。&lt;/p>
&lt;/blockquote>
&lt;h2 id="六blogdown和hugo建立本地文件">六、Blogdown和Hugo建立本地文件&lt;/h2>
&lt;p>其实应该先写这块的，貌似这个才是重要的，不过Blogdown有一本书供参考，Hugo也是全网推荐，写多了也没有意义了，官网文档超级实用。看下面这篇
&lt;a href="https://cosx.org/2018/01/build-blog-with-blogdown-hugo-netlify-github/" target="_blank" rel="noopener">用 R 语言的 blogdown+hugo+netlify+github 建博客&lt;/a>就足够了，不过略有区别，托管网站的选择上，netlify可以替换为Github pages + Actions，更加方便，不需要第三方的程序实现自动部署。&lt;/p>
&lt;p>下面是关键代码：（Git、Rstudio、R、VScode的安装 略）&lt;/p>
&lt;pre>&lt;code class="language-r">setwd(&amp;quot;D:\\OneDrive\\git\\MyBlog\\&amp;quot;)
options(repos=structure(c(CRAN=&amp;quot;https://mirrors.tuna.tsinghua.edu.cn/CRAN/&amp;quot;)))
# 超级简单的代码-----------------------------------------
install.packages('blogdown')
blogdown::install_hugo()
# 下载太慢就自己下载再安装
#blogdown:::install_hugo_bin(&amp;quot;d:/hugo.exe&amp;quot;)
# 选择主题、查看hugo版本、建立新文档、本地发布文件、本地网页预览
blogdown::new_site(theme = 'gcushen/hugo-academic')
blogdown::hugo_version()
blogdown::new_post()
blogdown::hugo_build()
blogdown::serve_site()
&lt;/code>&lt;/pre>
&lt;p>其实使用Rstudio的话，上面代码都不用了，addins里面超级方便的按钮操作&lt;code>New Post&lt;/code>、&lt;code>Serve site&lt;/code>，同时shiny界面直接输入内容即可，非常赞的可视化操作界面。不过，我还是选择VScode + R执行blogdown代码，大爱VScode。
设置gitignore,点击.gitignore文件，修改如下（copy Yihui大神）：&lt;/p>
&lt;pre>&lt;code class="language-r">.Rproj.user
.Rhistory
.RData
.Ruserdata
public
static/figures
blogdown
&lt;/code>&lt;/pre>
&lt;p>然后就可以改改改，写写写了~~&lt;/p>
&lt;p>至于模板的修改，个性化的改动就看个人的能力了~~&lt;/p>
&lt;h2 id="七参考资料">七、参考资料&lt;/h2>
&lt;ul>
&lt;li>
&lt;a href="https://bookdown.org/yihui/blogdown/" target="_blank" rel="noopener">Blogdown&lt;/a> 看完你就会尝试Bookdown了@@&lt;/li>
&lt;li>
&lt;a href="https://owovo.xyz/post/%E4%BD%BF%E7%94%A8GithubActions&amp;#43;Hugo&amp;#43;GithubPages%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2.html" target="_blank" rel="noopener">使用 Github Actions + Hugo + Github Pages搭建博客&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://cosx.org/2018/01/build-blog-with-blogdown-hugo-netlify-github/" target="_blank" rel="noopener">用 R 语言的 blogdown+hugo+netlify+github 建博客&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://gaolei.xyz/2019/08/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/" target="_blank" rel="noopener">从零开始搭建个人博客&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Bioconda</title><link>/post/bioconda/</link><pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate><guid>/post/bioconda/</guid><description>&lt;p>&lt;strong>查看已安装的库&lt;/strong>&lt;/p>
&lt;pre>&lt;code>conda list
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>安装和更新&lt;/strong>&lt;/p>
&lt;pre>&lt;code>conda install XXX
conda update XXX
conda update --all #更新所有库
conda update conda #更新conda
conda updata anaconda #更新anaconda
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>环境相关&lt;/strong>&lt;/p>
&lt;pre>&lt;code>conda config --add channels conda-forge
conda config --add channels bioconda
conda create -n salmon salmon #创建环境
conda activate salmon #激活环境
conda deactivate #退出环境
#conda remove -n salmon #删除环境，不要乱删
conda env list #显示所有环境
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>清理软件&lt;/strong>&lt;/p>
&lt;pre>&lt;code>conda clean -p //删除多余的包
conda clean -y -all //删除所有的安装包及cache&lt;/code>&lt;/pre></description></item><item><title>Salmon代码备存</title><link>/post/salmon/</link><pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate><guid>/post/salmon/</guid><description>&lt;p>#Salmon代码备存&lt;/p>
&lt;p>听说你还可以分析scRNA&lt;/p>
&lt;pre>&lt;code>salmon alevin -l ISR -1 Pi_F_S1_L005_R1_001.fastq.gz -2 Pi_F_S1_L005_R2_001.fastq.gz --chromium -i ~/index/ggzjn_index/ -p 10 --dumpMtx -o alevin_output/ --tgMap txp2gene.txt --expectCells 18000
salmon alevin -l ISR -1 Pi_M_S1_L004_R1_001.fastq.gz -2 Pi_M_S1_L004_R2_001.fastq.gz --chromium -i ~/index/ggzjn_index/ -p 15 --dumpMtx -o alevin_output/ --tgMap txp2gene.txt --expectCells 18000
&lt;/code>&lt;/pre>
&lt;p>数据下载-plan A&lt;/p>
&lt;pre>&lt;code>#!/bin/bash
for fn in SRR1299{036..049};
do
samp=`basename ${fn}`
echo &amp;quot;Processing sample ${samp}&amp;quot;
ascp -QT -l 300m -P33001 -i ~/miniconda3/etc/asperaweb_id_dsa.openssh era-fasp@fasp.sra.ebi.ac.uk:/vol1/srr/SRR707/008/${fn} ./
mv ${fn} ${fn}.sra
done
&lt;/code>&lt;/pre>
&lt;p>数据下载-plan B&lt;/p>
&lt;pre>&lt;code>nano srr.txt
SRR1524238
SRR1524239
SRR1524240
SRR1524241
prefetch --option-file srr.txt -O ./
prefetch -t ascp -a &amp;quot;/home/labwang/.aspera/connect/bin/ascp|/home/labwang/.aspera/connect/etc/asperaweb_id_dsa.openssh&amp;quot; --option-file srr.txt -O ./
# 啊，升级了好麻烦啊！！！
prefetch -t ascp -a &amp;quot;/home/labwang/.aspera/connect/bin/ascp|/home/labwang/.aspera/connect/etc/asperaweb_id_dsa.openssh&amp;quot; --option-file srr.txt
cd /usr/local/ncbi/sra-tools/bin 然后 ./vdb-config -i 然后 巴拉巴拉~~~
&lt;/code>&lt;/pre>
&lt;p>分析&lt;/p>
&lt;pre>&lt;code>salmon index -t Taeniopygia_guttata.taeGut3.2.4.cdna.all.fa -i finch2_index
#!/bin/bash
for fn in SRR7072{158..175};
do
path=$(pwd)
samp=`basename ${fn}`
echo &amp;quot;Processing sample ${samp}&amp;quot;
pfastq-dump -t 20 --split-files --gzip -O ${path}/fastq ${samp}.sra
done
#!/bin/bash
for fn in SRR7072{158..175};
do
path=$(pwd)
echo &amp;quot;Processing sample ${fn}&amp;quot;
salmon quant -i ~/index/ggzjn_index --validateMappings -l A \
-1 ${path}/fastq/${fn}_1.fastq.gz \
-2 ${path}/fastq/${fn}_2.fastq.gz \
-p 20 -o ${path}/quant/${fn}_quant
done
bash /data3/PI-LV/R/DESEQ2.sh -f result-DE.txt -s samplefiles.txt -p compare_pair.txt
bash /data3/PI-LV/R/DESEQ2.sh -f result-DE.txt -s samplefiles.txt -p compare_pair.txt -F 0.5 -P 0.01
library(&amp;quot;tximport&amp;quot;)
library(readr)
dir &amp;lt;- &amp;quot;D:/Users/zjn-lab/Documents/salmon&amp;quot;
list.files(dir)
sample &amp;lt;- paste0(&amp;quot;ERR348&amp;quot;,seq(560,588),&amp;quot;_quant&amp;quot;)
files &amp;lt;- file.path(dir,&amp;quot;quant&amp;quot;,sample,&amp;quot;quant.sf&amp;quot;)
names(files) &amp;lt;- paste0(&amp;quot;sample&amp;quot;,c(1:3))
all(file.exists(files))
head(files)
tx2gene &amp;lt;- read_csv(file.path(dir, &amp;quot;tx2gene.gencode.v97.csv&amp;quot;))
head(tx2gene)
txi &amp;lt;- tximport(files, type = &amp;quot;salmon&amp;quot;, tx2gene = tx2gene)
head(txi)
names(txi)
head(txi$abundance)
head(txi$length)
head(txi$counts)
head(txi$countsFromAbundance)
#write.table(txi$abundance, &amp;quot;abundance.txt&amp;quot;, sep=&amp;quot;\t&amp;quot;, quote=F)
write.csv(txi$abundance, &amp;quot;abundance.csv&amp;quot;, quote=F)
txi.tx &amp;lt;- tximport(files, type = &amp;quot;salmon&amp;quot;, txOut = TRUE)
txi.sum &amp;lt;- summarizeToGene(txi.tx, tx2gene)
all.equal(txi$counts, txi.sum$counts)
head(txi.tx)
names(txi.tx)
head(txi.tx$abundance)
head(txi.tx$length)
head(txi.tx$counts)
head(txi.tx$countsFromAbundance)
library(DESeq2)
sampleTable &amp;lt;- data.frame(condition = factor(rep(c(&amp;quot;untreated&amp;quot;, &amp;quot;treated&amp;quot;), each = 4)))
rownames(sampleTable) &amp;lt;- colnames(txi$counts)
dds &amp;lt;- DESeqDataSetFromTximport(txi, sampleTable, ~condition)
dds
sampleTable
keep &amp;lt;- rowSums(counts(dds)) &amp;gt;= 10
dds &amp;lt;- dds[keep,]
&lt;/code>&lt;/pre>
&lt;p>数据质检过滤&lt;/p>
&lt;pre>&lt;code>#!/bin/bash
for fn in SRR1524{238..249};
do
path=$(pwd)
samp=`basename ${fn}`
echo &amp;quot;Processing sample ${samp}&amp;quot;
fastqc -o ${path}/fastqc -t 50 ${path}/fastq/${fn}_1.fastq.gz
fastqc -o ${path}/fastqc -t 50 ${path}/fastq/${fn}_2.fastq.gz
done
multiqc .
#!/bin/bash
for fn in SRR1524{238..249};
do
samp=`basename ${fn}`
echo &amp;quot;Processing sample ${samp}&amp;quot;
trimmomatic PE -phred33 -threads 20 ${fn}_1.fastq.gz ${fn}_2.fastq.gz ${fn}_paired_1.fastq.gz ${fn}_unpaired_1.fastq.gz ${fn}_paired_2.fastq.gz ${fn}_unpaired_2.fastq.gz ILLUMINACLIP:/home/labwang/miniconda3/share/trimmomatic-0.38-1/adapters/TruSeq3-PE.fa:2:30:10 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:36
rm -r ${fn}_unpaired_1.fastq.gz
rm -r ${fn}_unpaired_2.fastq.gz
rm -r ${fn}_1.fastq.gz
rm -r ${fn}_2.fastq.gz
done
去头去尾
trimmomatic PE -phred33 -threads 20 ${fn}_1.fq.gz ${fn}_2.fq.gz ${fn}_paired_1.fastq.gz ${fn}_unpaired_1.fastq.gz ${fn}_paired_2.fastq.gz ${fn}_unpaired_2.fastq.gz CROP:89 HEADCROP:10 MINLEN:36&lt;/code>&lt;/pre></description></item><item><title>VScode-R</title><link>/post/vscode-r/</link><pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate><guid>/post/vscode-r/</guid><description>&lt;h1 id="how-to-use-r-in-vscode">How to use R in VScode&lt;/h1>
&lt;h2 id="安装r和vscode">安装R和VScode&lt;/h2>
&lt;p>额，打开Google，搜索官网，自己安装即可。不会？&lt;code>Alt + F4&lt;/code>，再见！&lt;/p>
&lt;h2 id="相关插件安装及设置">相关插件安装及设置&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>打开安装好的R程序，安装&lt;code>languageserver&lt;/code>包，实现 R 和 编辑器的同步。&lt;/p>
&lt;pre>&lt;code class="language-r">install.packages(&amp;quot;languageserver&amp;quot;)
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>打开安装好的VScode程序，插件里面搜索并安装&lt;code>R LSP Client&lt;/code>和&lt;code>R&lt;/code>插件，很简单的；然后设置R在VScode中的路径，打开设置界面，在搜索框中输入 &lt;strong>&lt;code>r.lsp&lt;/code>&lt;/strong>，找到你电脑操作系统所对应的设置 ( Linux 系统选择 Rterm: Linux，Windows 系统则选择 Rterm: Windows)，然后在编辑栏中输入你的 R 可执行文件位置（如果是默认安装的 R 3.6.2 版本，位置应该是 &lt;code>C:\Program Files\R\R-3.6.2\bin\x64\R.exe&lt;/code>）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>难点来了，安装
&lt;a href="https://github.com/randy3k/radian" target="_blank" rel="noopener">&lt;code>radian: A 21 century R console&lt;/code>&lt;/a>，替换原始R界面。&lt;/p>
&lt;blockquote>
&lt;p>radian is an alternative console for the R program with multiline editing and rich syntax highlight.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;code>radian&lt;/code>基于python，所以先在电脑上安装python，当然，你可以选择anaconda安装，不过，我还是觉得自己安装在window10里面也没问题，接下来就是相关核心步骤。&lt;/li>
&lt;li>下载并安装合适版本的
&lt;a href="https://www.python.org/downloads/" target="_blank" rel="noopener">&lt;code>pyhton&lt;/code>&lt;/a>，安装的时候特别要注意勾上&lt;code>Add Python 3.8 to PATH&lt;/code>，然后点&lt;code>Install Now&lt;/code>即可完成安装。&lt;/li>
&lt;li>打开VScode的终端，输入&lt;code>python&lt;/code>，如果显示版本并进入python即安装成功，输入&lt;code>exit()&lt;/code>回到powershell中。然后输入&lt;code>pip install -U radian&lt;/code>安装&lt;code>radian&lt;/code>，输入&lt;code>pip install jedi&lt;/code>安装&lt;code>jedi&lt;/code>。输入&lt;code>radian&lt;/code>提示R版本即安装成功。&lt;/li>
&lt;li>在 VSCode 中重新设置&lt;code>Rterm.Windows&lt;/code>为&lt;code>radian.exe&lt;/code>路径，&lt;br>例如&lt;code>C:\Users\zjn\AppData\Local\Programs\Python\Python38\Scripts\radian.exe&lt;/code>；&lt;/li>
&lt;li>找到&lt;code>Rterm.Option&lt;/code>选项，在设置中关闭&lt;code>--no-save&lt;/code>和&lt;code>no-restore&lt;/code>两个选项即可，重启即可使用&lt;strong>VScode&lt;/strong>运行&lt;strong>R&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;ol start="4">
&lt;li>
&lt;p>在 VSCode 中设置R输入快捷键，如&lt;code>Alt + -&lt;/code>输入&lt;code>&amp;lt;-&lt;/code>。打开 Keyboard Shortcuts （快捷键是 CTRL+K CTRL+S），右上点开&lt;code>keybindings.json&lt;/code>文件，输入下面代码即可。&lt;/p>
&lt;pre>&lt;code class="language-r">{
&amp;quot;key&amp;quot;: &amp;quot;alt+-&amp;quot;,
&amp;quot;command&amp;quot;: &amp;quot;type&amp;quot;,
&amp;quot;args&amp;quot;: {
&amp;quot;text&amp;quot;: &amp;quot;&amp;lt;-&amp;quot;
},
&amp;quot;when&amp;quot;: &amp;quot;editorTextFocus&amp;quot;
}
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ol>
&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;ul>
&lt;li>
&lt;a href="https://sspai.com/post/47386" target="_blank" rel="noopener">在VSCode 中配置R 语言运行环境&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://zhuanlan.zhihu.com/p/65966331" target="_blank" rel="noopener">VSCode 愉快地使用 R&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Writing technical content in Academic</title><link>/post/writing-technical-content/</link><pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate><guid>/post/writing-technical-content/</guid><description>&lt;p>Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.&lt;/p>
&lt;p>&lt;strong>Highlight your code snippets, take notes on math classes, and draw diagrams from textual representation.&lt;/strong>&lt;/p>
&lt;p>On this page, you&amp;rsquo;ll find some examples of the types of technical content that can be rendered with Academic.&lt;/p>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;h3 id="code">Code&lt;/h3>
&lt;p>Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the &lt;code>highlight&lt;/code> option in your &lt;code>config/_default/params.toml&lt;/code> file.&lt;/p>
&lt;pre>&lt;code>```python
import pandas as pd
data = pd.read_csv(&amp;quot;data.csv&amp;quot;)
data.head()
```
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;pre>&lt;code class="language-python">import pandas as pd
data = pd.read_csv(&amp;quot;data.csv&amp;quot;)
data.head()
&lt;/code>&lt;/pre>
&lt;h3 id="math">Math&lt;/h3>
&lt;p>Academic supports a Markdown extension for $\LaTeX$ math. You can enable this feature by toggling the &lt;code>math&lt;/code> option in your &lt;code>config/_default/params.toml&lt;/code> file.&lt;/p>
&lt;p>To render &lt;em>inline&lt;/em> or &lt;em>block&lt;/em> math, wrap your LaTeX math with &lt;code>$...$&lt;/code> or &lt;code>$$...$$&lt;/code>, respectively.&lt;/p>
&lt;p>Example &lt;strong>math block&lt;/strong>:&lt;/p>
&lt;pre>&lt;code class="language-tex">$$\gamma_{n} = \frac{
\left | \left (\mathbf x_{n} - \mathbf x_{n-1} \right )^T
\left [\nabla F (\mathbf x_{n}) - \nabla F (\mathbf x_{n-1}) \right ] \right |}
{\left \|\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right \|^2}$$
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;p>$$\gamma_{n} = \frac{ \left | \left (\mathbf x_{n} - \mathbf x_{n-1} \right )^T \left [\nabla F (\mathbf x_{n}) - \nabla F (\mathbf x_{n-1}) \right ] \right |}{\left |\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right |^2}$$&lt;/p>
&lt;p>Example &lt;strong>inline math&lt;/strong> &lt;code>$\nabla F(\mathbf{x}_{n})$&lt;/code> renders as $\nabla F(\mathbf{x}_{n})$.&lt;/p>
&lt;p>Example &lt;strong>multi-line math&lt;/strong> using the &lt;code>\\&lt;/code> math linebreak:&lt;/p>
&lt;pre>&lt;code class="language-tex">$$f(k;p_0^*) = \begin{cases} p_0^* &amp;amp; \text{if }k=1, \\
1-p_0^* &amp;amp; \text {if }k=0.\end{cases}$$
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;p>$$f(k;p_0^*) = \begin{cases} p_0^* &amp;amp; \text{if }k=1, \&lt;br>
1-p_0^* &amp;amp; \text {if }k=0.\end{cases}$$&lt;/p>
&lt;h3 id="diagrams">Diagrams&lt;/h3>
&lt;p>Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the &lt;code>diagram&lt;/code> option in your &lt;code>config/_default/params.toml&lt;/code> file or by adding &lt;code>diagram: true&lt;/code> to your page front matter.&lt;/p>
&lt;p>An example &lt;strong>flowchart&lt;/strong>:&lt;/p>
&lt;pre>&lt;code>```mermaid
graph TD
A[Hard] --&amp;gt;|Text| B(Round)
B --&amp;gt; C{Decision}
C --&amp;gt;|One| D[Result 1]
C --&amp;gt;|Two| E[Result 2]
```
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;pre>&lt;code class="language-mermaid">graph TD
A[Hard] --&amp;gt;|Text| B(Round)
B --&amp;gt; C{Decision}
C --&amp;gt;|One| D[Result 1]
C --&amp;gt;|Two| E[Result 2]
&lt;/code>&lt;/pre>
&lt;p>An example &lt;strong>sequence diagram&lt;/strong>:&lt;/p>
&lt;pre>&lt;code>```mermaid
sequenceDiagram
Alice-&amp;gt;&amp;gt;John: Hello John, how are you?
loop Healthcheck
John-&amp;gt;&amp;gt;John: Fight against hypochondria
end
Note right of John: Rational thoughts!
John--&amp;gt;&amp;gt;Alice: Great!
John-&amp;gt;&amp;gt;Bob: How about you?
Bob--&amp;gt;&amp;gt;John: Jolly good!
```
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;pre>&lt;code class="language-mermaid">sequenceDiagram
Alice-&amp;gt;&amp;gt;John: Hello John, how are you?
loop Healthcheck
John-&amp;gt;&amp;gt;John: Fight against hypochondria
end
Note right of John: Rational thoughts!
John--&amp;gt;&amp;gt;Alice: Great!
John-&amp;gt;&amp;gt;Bob: How about you?
Bob--&amp;gt;&amp;gt;John: Jolly good!
&lt;/code>&lt;/pre>
&lt;p>An example &lt;strong>Gantt diagram&lt;/strong>:&lt;/p>
&lt;pre>&lt;code>```mermaid
gantt
section Section
Completed :done, des1, 2014-01-06,2014-01-08
Active :active, des2, 2014-01-07, 3d
Parallel 1 : des3, after des1, 1d
Parallel 2 : des4, after des1, 1d
Parallel 3 : des5, after des3, 1d
Parallel 4 : des6, after des4, 1d
```
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;pre>&lt;code class="language-mermaid">gantt
section Section
Completed :done, des1, 2014-01-06,2014-01-08
Active :active, des2, 2014-01-07, 3d
Parallel 1 : des3, after des1, 1d
Parallel 2 : des4, after des1, 1d
Parallel 3 : des5, after des3, 1d
Parallel 4 : des6, after des4, 1d
&lt;/code>&lt;/pre>
&lt;p>An example &lt;strong>class diagram&lt;/strong>:&lt;/p>
&lt;pre>&lt;code>```mermaid
classDiagram
Class01 &amp;lt;|-- AveryLongClass : Cool
&amp;lt;&amp;lt;interface&amp;gt;&amp;gt; Class01
Class09 --&amp;gt; C2 : Where am i?
Class09 --* C3
Class09 --|&amp;gt; Class07
Class07 : equals()
Class07 : Object[] elementData
Class01 : size()
Class01 : int chimp
Class01 : int gorilla
class Class10 {
&amp;lt;&amp;lt;service&amp;gt;&amp;gt;
int id
size()
}
```
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;pre>&lt;code class="language-mermaid">classDiagram
Class01 &amp;lt;|-- AveryLongClass : Cool
&amp;lt;&amp;lt;interface&amp;gt;&amp;gt; Class01
Class09 --&amp;gt; C2 : Where am i?
Class09 --* C3
Class09 --|&amp;gt; Class07
Class07 : equals()
Class07 : Object[] elementData
Class01 : size()
Class01 : int chimp
Class01 : int gorilla
class Class10 {
&amp;lt;&amp;lt;service&amp;gt;&amp;gt;
int id
size()
}
&lt;/code>&lt;/pre>
&lt;p>An example &lt;strong>state diagram&lt;/strong>:&lt;/p>
&lt;pre>&lt;code>```mermaid
stateDiagram
[*] --&amp;gt; Still
Still --&amp;gt; [*]
Still --&amp;gt; Moving
Moving --&amp;gt; Still
Moving --&amp;gt; Crash
Crash --&amp;gt; [*]
```
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;pre>&lt;code class="language-mermaid">stateDiagram
[*] --&amp;gt; Still
Still --&amp;gt; [*]
Still --&amp;gt; Moving
Moving --&amp;gt; Still
Moving --&amp;gt; Crash
Crash --&amp;gt; [*]
&lt;/code>&lt;/pre>
&lt;h3 id="todo-lists">Todo lists&lt;/h3>
&lt;p>You can even write your todo lists in Academic too:&lt;/p>
&lt;pre>&lt;code class="language-markdown">- [x] Write math example
- [x] Write diagram example
- [ ] Do something else
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox">Write math example&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox">Write diagram example&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox">Do something else&lt;/li>
&lt;/ul>
&lt;h3 id="tables">Tables&lt;/h3>
&lt;p>Represent your data in tables:&lt;/p>
&lt;pre>&lt;code class="language-markdown">| First Header | Second Header |
| ------------- | ------------- |
| Content Cell | Content Cell |
| Content Cell | Content Cell |
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>First Header&lt;/th>
&lt;th>Second Header&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Content Cell&lt;/td>
&lt;td>Content Cell&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Content Cell&lt;/td>
&lt;td>Content Cell&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="asides">Asides&lt;/h3>
&lt;p>Academic supports a
&lt;a href="https://sourcethemes.com/academic/docs/writing-markdown-latex/#alerts" target="_blank" rel="noopener">shortcode for asides&lt;/a>, also referred to as &lt;em>notices&lt;/em>, &lt;em>hints&lt;/em>, or &lt;em>alerts&lt;/em>. By wrapping a paragraph in &lt;code>{{% alert note %}} ... {{% /alert %}}&lt;/code>, it will render as an aside.&lt;/p>
&lt;pre>&lt;code class="language-markdown">{{% alert note %}}
A Markdown aside is useful for displaying notices, hints, or definitions to your readers.
{{% /alert %}}
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;div class="alert alert-note">
&lt;div>
A Markdown aside is useful for displaying notices, hints, or definitions to your readers.
&lt;/div>
&lt;/div>
&lt;h3 id="icons">Icons&lt;/h3>
&lt;p>Academic enables you to use a wide range of
&lt;a href="https://sourcethemes.com/academic/docs/page-builder/#icons" target="_blank" rel="noopener">icons from &lt;em>Font Awesome&lt;/em> and &lt;em>Academicons&lt;/em>&lt;/a> in addition to
&lt;a href="https://sourcethemes.com/academic/docs/writing-markdown-latex/#emojis" target="_blank" rel="noopener">emojis&lt;/a>.&lt;/p>
&lt;p>Here are some examples using the &lt;code>icon&lt;/code> shortcode to render icons:&lt;/p>
&lt;pre>&lt;code class="language-markdown">{{&amp;lt; icon name=&amp;quot;terminal&amp;quot; pack=&amp;quot;fas&amp;quot; &amp;gt;}} Terminal
{{&amp;lt; icon name=&amp;quot;python&amp;quot; pack=&amp;quot;fab&amp;quot; &amp;gt;}} Python
{{&amp;lt; icon name=&amp;quot;r-project&amp;quot; pack=&amp;quot;fab&amp;quot; &amp;gt;}} R
&lt;/code>&lt;/pre>
&lt;p>renders as&lt;/p>
&lt;p>
&lt;i class="fas fa-terminal pr-1 fa-fw">&lt;/i> Terminal&lt;br>
&lt;i class="fab fa-python pr-1 fa-fw">&lt;/i> Python&lt;br>
&lt;i class="fab fa-r-project pr-1 fa-fw">&lt;/i> R&lt;/p>
&lt;h3 id="did-you-find-this-page-helpful-consider-sharing-it-">Did you find this page helpful? Consider sharing it 🙌&lt;/h3></description></item><item><title>Academic: the website builder for Hugo</title><link>/post/getting-started/</link><pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate><guid>/post/getting-started/</guid><description>&lt;p>&lt;strong>Create a free website with Academic using Markdown, Jupyter, or RStudio. Choose a beautiful color theme and build anything with the Page Builder - over 40 &lt;em>widgets&lt;/em>, &lt;em>themes&lt;/em>, and &lt;em>language packs&lt;/em> included!&lt;/strong>&lt;/p>
&lt;p>
&lt;a href="https://academic-demo.netlify.com/" target="_blank" rel="noopener">Check out the latest &lt;strong>demo&lt;/strong>&lt;/a> of what you&amp;rsquo;ll get in less than 10 minutes, or
&lt;a href="https://sourcethemes.com/academic/#expo" target="_blank" rel="noopener">view the &lt;strong>showcase&lt;/strong>&lt;/a> of personal, project, and business sites.&lt;/p>
&lt;ul>
&lt;li>👉
&lt;a href="#install">&lt;strong>Get Started&lt;/strong>&lt;/a>&lt;/li>
&lt;li>📚
&lt;a href="https://sourcethemes.com/academic/docs/" target="_blank" rel="noopener">View the &lt;strong>documentation&lt;/strong>&lt;/a>&lt;/li>
&lt;li>💬
&lt;a href="https://discourse.gohugo.io" target="_blank" rel="noopener">&lt;strong>Ask a question&lt;/strong> on the forum&lt;/a>&lt;/li>
&lt;li>👥
&lt;a href="https://spectrum.chat/academic" target="_blank" rel="noopener">Chat with the &lt;strong>community&lt;/strong>&lt;/a>&lt;/li>
&lt;li>🐦 Twitter:
&lt;a href="https://twitter.com/source_themes" target="_blank" rel="noopener">@source_themes&lt;/a>
&lt;a href="https://twitter.com/GeorgeCushen" target="_blank" rel="noopener">@GeorgeCushen&lt;/a>
&lt;a href="https://twitter.com/search?q=%23MadeWithAcademic&amp;amp;src=typd" target="_blank" rel="noopener">#MadeWithAcademic&lt;/a>&lt;/li>
&lt;li>💡
&lt;a href="https://github.com/gcushen/hugo-academic/issues" target="_blank" rel="noopener">Request a &lt;strong>feature&lt;/strong> or report a &lt;strong>bug&lt;/strong>&lt;/a>&lt;/li>
&lt;li>⬆️ &lt;strong>Updating?&lt;/strong> View the
&lt;a href="https://sourcethemes.com/academic/docs/update/" target="_blank" rel="noopener">Update Guide&lt;/a> and
&lt;a href="https://sourcethemes.com/academic/updates/" target="_blank" rel="noopener">Release Notes&lt;/a>&lt;/li>
&lt;li>❤ &lt;strong>Support development&lt;/strong> of Academic:
&lt;ul>
&lt;li>☕️
&lt;a href="https://paypal.me/cushen" target="_blank" rel="noopener">&lt;strong>Donate a coffee&lt;/strong>&lt;/a>&lt;/li>
&lt;li>💵
&lt;a href="https://www.patreon.com/cushen" target="_blank" rel="noopener">Become a backer on &lt;strong>Patreon&lt;/strong>&lt;/a>&lt;/li>
&lt;li>🖼️
&lt;a href="https://www.redbubble.com/people/neutreno/works/34387919-academic" target="_blank" rel="noopener">Decorate your laptop or journal with an Academic &lt;strong>sticker&lt;/strong>&lt;/a>&lt;/li>
&lt;li>👕
&lt;a href="https://academic.threadless.com/" target="_blank" rel="noopener">Wear the &lt;strong>T-shirt&lt;/strong>&lt;/a>&lt;/li>
&lt;li>👩‍💻
&lt;a href="https://sourcethemes.com/academic/docs/contribute/" target="_blank" rel="noopener">&lt;strong>Contribute&lt;/strong>&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;figure>
&lt;a data-fancybox="" href="https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png" data-caption="Academic is mobile first with a responsive design to ensure that your site looks stunning on every device.">
&lt;img src="https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png" alt="" >
&lt;/a>
&lt;figcaption>
Academic is mobile first with a responsive design to ensure that your site looks stunning on every device.
&lt;/figcaption>
&lt;/figure>
&lt;p>&lt;strong>Key features:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Page builder&lt;/strong> - Create &lt;em>anything&lt;/em> with
&lt;a href="https://sourcethemes.com/academic/docs/page-builder/" target="_blank" rel="noopener">&lt;strong>widgets&lt;/strong>&lt;/a> and
&lt;a href="https://sourcethemes.com/academic/docs/writing-markdown-latex/" target="_blank" rel="noopener">&lt;strong>elements&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;strong>Edit any type of content&lt;/strong> - Blog posts, publications, talks, slides, projects, and more!&lt;/li>
&lt;li>&lt;strong>Create content&lt;/strong> in
&lt;a href="https://sourcethemes.com/academic/docs/writing-markdown-latex/" target="_blank" rel="noopener">&lt;strong>Markdown&lt;/strong>&lt;/a>,
&lt;a href="https://sourcethemes.com/academic/docs/jupyter/" target="_blank" rel="noopener">&lt;strong>Jupyter&lt;/strong>&lt;/a>, or
&lt;a href="https://sourcethemes.com/academic/docs/install/#install-with-rstudio" target="_blank" rel="noopener">&lt;strong>RStudio&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;strong>Plugin System&lt;/strong> - Fully customizable
&lt;a href="https://sourcethemes.com/academic/themes/" target="_blank" rel="noopener">&lt;strong>color&lt;/strong> and &lt;strong>font themes&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;strong>Display Code and Math&lt;/strong> - Code highlighting and
&lt;a href="https://en.wikibooks.org/wiki/LaTeX/Mathematics" target="_blank" rel="noopener">LaTeX math&lt;/a> supported&lt;/li>
&lt;li>&lt;strong>Integrations&lt;/strong> -
&lt;a href="https://analytics.google.com" target="_blank" rel="noopener">Google Analytics&lt;/a>,
&lt;a href="https://disqus.com" target="_blank" rel="noopener">Disqus commenting&lt;/a>, Maps, Contact Forms, and more!&lt;/li>
&lt;li>&lt;strong>Beautiful Site&lt;/strong> - Simple and refreshing one page design&lt;/li>
&lt;li>&lt;strong>Industry-Leading SEO&lt;/strong> - Help get your website found on search engines and social media&lt;/li>
&lt;li>&lt;strong>Media Galleries&lt;/strong> - Display your images and videos with captions in a customizable gallery&lt;/li>
&lt;li>&lt;strong>Mobile Friendly&lt;/strong> - Look amazing on every screen with a mobile friendly version of your site&lt;/li>
&lt;li>&lt;strong>Multi-language&lt;/strong> - 15+ language packs including English, 中文, and Português&lt;/li>
&lt;li>&lt;strong>Multi-user&lt;/strong> - Each author gets their own profile page&lt;/li>
&lt;li>&lt;strong>Privacy Pack&lt;/strong> - Assists with GDPR&lt;/li>
&lt;li>&lt;strong>Stand Out&lt;/strong> - Bring your site to life with animation, parallax backgrounds, and scroll effects&lt;/li>
&lt;li>&lt;strong>One-Click Deployment&lt;/strong> - No servers. No databases. Only files.&lt;/li>
&lt;/ul>
&lt;h2 id="themes">Themes&lt;/h2>
&lt;p>Academic comes with &lt;strong>automatic day (light) and night (dark) mode&lt;/strong> built-in. Alternatively, visitors can choose their preferred mode - click the sun/moon icon in the top right of the
&lt;a href="https://academic-demo.netlify.com/" target="_blank" rel="noopener">Demo&lt;/a> to see it in action! Day/night mode can also be disabled by the site admin in &lt;code>params.toml&lt;/code>.&lt;/p>
&lt;p>
&lt;a href="https://sourcethemes.com/academic/themes/" target="_blank" rel="noopener">Choose a stunning &lt;strong>theme&lt;/strong> and &lt;strong>font&lt;/strong>&lt;/a> for your site. Themes are fully
&lt;a href="https://sourcethemes.com/academic/docs/customization/#custom-theme" target="_blank" rel="noopener">customizable&lt;/a>.&lt;/p>
&lt;h2 id="ecosystem">Ecosystem&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>
&lt;a href="https://github.com/sourcethemes/academic-admin" target="_blank" rel="noopener">Academic Admin&lt;/a>:&lt;/strong> An admin tool to import publications from BibTeX or import assets for an offline site&lt;/li>
&lt;li>&lt;strong>
&lt;a href="https://github.com/sourcethemes/academic-scripts" target="_blank" rel="noopener">Academic Scripts&lt;/a>:&lt;/strong> Scripts to help migrate content to new versions of Academic&lt;/li>
&lt;/ul>
&lt;h2 id="install">Install&lt;/h2>
&lt;p>You can choose from one of the following four methods to install:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://sourcethemes.com/academic/docs/install/#install-with-web-browser" target="_blank" rel="noopener">&lt;strong>one-click install using your web browser (recommended)&lt;/strong>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://sourcethemes.com/academic/docs/install/#install-with-git" target="_blank" rel="noopener">install on your computer using &lt;strong>Git&lt;/strong> with the Command Prompt/Terminal app&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://sourcethemes.com/academic/docs/install/#install-with-zip" target="_blank" rel="noopener">install on your computer by downloading the &lt;strong>ZIP files&lt;/strong>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://sourcethemes.com/academic/docs/install/#install-with-rstudio" target="_blank" rel="noopener">install on your computer with &lt;strong>RStudio&lt;/strong>&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Then
&lt;a href="https://sourcethemes.com/academic/docs/get-started/" target="_blank" rel="noopener">personalize and deploy your new site&lt;/a>.&lt;/p>
&lt;h2 id="updating">Updating&lt;/h2>
&lt;p>
&lt;a href="https://sourcethemes.com/academic/docs/update/" target="_blank" rel="noopener">View the Update Guide&lt;/a>.&lt;/p>
&lt;p>Feel free to &lt;em>star&lt;/em> the project on
&lt;a href="https://github.com/gcushen/hugo-academic/" target="_blank" rel="noopener">Github&lt;/a> to help keep track of
&lt;a href="https://sourcethemes.com/academic/updates" target="_blank" rel="noopener">updates&lt;/a>.&lt;/p>
&lt;h2 id="license">License&lt;/h2>
&lt;p>Copyright 2016-present
&lt;a href="https://georgecushen.com" target="_blank" rel="noopener">George Cushen&lt;/a>.&lt;/p>
&lt;p>Released under the
&lt;a href="https://github.com/gcushen/hugo-academic/blob/master/LICENSE.md" target="_blank" rel="noopener">MIT&lt;/a> license.&lt;/p></description></item><item><title>Hello R Markdown</title><link>/post/2015-07-23-r-rmarkdown/</link><pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate><guid>/post/2015-07-23-r-rmarkdown/</guid><description>
&lt;script src="/rmarkdown-libs/header-attrs/header-attrs.js">&lt;/script>
&lt;div id="r-markdown" class="section level1">
&lt;h1>R Markdown&lt;/h1>
&lt;p>This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see &lt;a href="http://rmarkdown.rstudio.com" class="uri">http://rmarkdown.rstudio.com&lt;/a>.&lt;/p>
&lt;p>You can embed an R code chunk like this:&lt;/p>
&lt;pre class="r">&lt;code>summary(cars)
## speed dist
## Min. : 4.0 Min. : 2.00
## 1st Qu.:12.0 1st Qu.: 26.00
## Median :15.0 Median : 36.00
## Mean :15.4 Mean : 42.98
## 3rd Qu.:19.0 3rd Qu.: 56.00
## Max. :25.0 Max. :120.00
fit &amp;lt;- lm(dist ~ speed, data = cars)
fit
##
## Call:
## lm(formula = dist ~ speed, data = cars)
##
## Coefficients:
## (Intercept) speed
## -17.579 3.932&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="including-plots" class="section level1">
&lt;h1>Including Plots&lt;/h1>
&lt;p>You can also embed plots. See Figure &lt;a href="#fig:pie">1&lt;/a> for example:&lt;/p>
&lt;pre class="r">&lt;code>par(mar = c(0, 1, 0, 1))
pie(
c(280, 60, 20),
c(&amp;#39;Sky&amp;#39;, &amp;#39;Sunny side of pyramid&amp;#39;, &amp;#39;Shady side of pyramid&amp;#39;),
col = c(&amp;#39;#0292D8&amp;#39;, &amp;#39;#F7EA39&amp;#39;, &amp;#39;#C4B632&amp;#39;),
init.angle = -50, border = NA
)&lt;/code>&lt;/pre>
&lt;div class="figure">&lt;span id="fig:pie">&lt;/span>
&lt;img src="/post/2015-07-23-r-rmarkdown_files/figure-html/pie-1.png" alt="A fancy pie chart." width="672" />
&lt;p class="caption">
Figure 1: A fancy pie chart.
&lt;/p>
&lt;/div>
&lt;/div></description></item></channel></rss>