<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>RNA-seq | Jiannan Zhang</title><link>/tags/rna-seq/</link><atom:link href="/tags/rna-seq/index.xml" rel="self" type="application/rss+xml"/><description>RNA-seq</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Fri, 24 Apr 2020 00:00:00 +0000</lastBuildDate><image><url>img/map[gravatar:%!s(bool=false) shape:circle]</url><title>RNA-seq</title><link>/tags/rna-seq/</link></image><item><title>阿里云服务新配置代码备存</title><link>/post/linux/aliyun-code/</link><pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate><guid>/post/linux/aliyun-code/</guid><description>&lt;p>新添了阿里云服务器，解决frp走国外服务器的延迟问题，同时为实验室数据分享网址的建立练手，当然以后肯定还会有很多购新的事件，因此这里记录下相关代码和备注事项，方便以后的操作：&lt;/p>
&lt;h2 id="ssh登陆">SSH登陆&lt;/h2>
&lt;p>&lt;del>垃圾&lt;/del>阿里云，操作复杂，事项繁多，比Vutlr的界面复杂太多了，不过安全性上面确实可能要高一些，新手直接劝退吧，不过新手也不会上来就买CES，或者买来就是练手的，我就是新手，差点被劝退了~~~&lt;/p>
&lt;p>首先重置密码，即设置新密码，为什么不能随机给个默认的，要这么麻烦，吐槽+1&amp;hellip;&amp;hellip;
然后在安全组界面添加密钥，默认只能通过密钥登陆，安全性提高，然后记得重启CES，随便啥远程登陆进去~再次前排推荐&lt;code>Visual Studio Code&lt;/code>！！！&lt;/p>
&lt;h2 id="虚拟内存">虚拟内存&lt;/h2>
&lt;p>由于开启swap分区会导致硬盘IO性能下降，因此阿里云服务器初始状态未配置swap，如果某些应用需要开启swap分区，自己设置即可。&lt;del>小鸡的烦恼，土豪随意&lt;/del>&lt;/p>
&lt;pre>&lt;code class="language-SHELL">sudo dd if=/dev/zero of=swapfile bs=1024 count=2048000
sudo mkswap -f swapfile
chmod 0600 swapfile
sudo swapon swapfile
sudo cp /etc/fstab /etc/fstab.bak
echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab #学到么？下面还有类似操作喔~
shutdown -r now #重启看下free
&lt;/code>&lt;/pre>
&lt;h2 id="r-shiny-and-rstudio">R, Shiny and Rstudio&lt;/h2>
&lt;h3 id="r-installhttpscranr-projectorgbinlinuxubuntureadmehtml">
&lt;a href="https://cran.r-project.org/bin/linux/ubuntu/README.html" target="_blank" rel="noopener">R install&lt;/a>&lt;/h3>
&lt;pre>&lt;code class="language-SHELL">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
#根据系统选择合适的软件包，不确定记得去官网查看下最新记录
sudo add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/'
sudo add-apt-repository 'deb https://mirrors.tuna.tsinghua.edu.cn/CRAN/bin/linux/ubuntu bionic-cran35/'
sudo apt-get update
sudo apt-get install r-base
sudo apt-get install r-base-dev
sudo -i R
&lt;/code>&lt;/pre>
&lt;h3 id="rstudio-serverhttpsrstudiocomproductsrstudiodownload-serverdebian-ubuntu">
&lt;a href="https://rstudio.com/products/rstudio/download-server/debian-ubuntu/" target="_blank" rel="noopener">Rstudio server&lt;/a>&lt;/h3>
&lt;p>&lt;code>116.62.102.124&lt;/code>&lt;/p>
&lt;pre>&lt;code class="language-SHELL"># 视系统不同选择有差异，这里是ubuntu 18.04
sudo apt-get install gdebi-core
wget https://download2.rstudio.org/server/bionic/amd64/rstudio-server-1.2.5033-amd64.deb
sudo gdebi rstudio-server-1.2.5033-amd64.deb
echo &amp;quot;www-port=8787&amp;quot; | sudo tee -a /etc/rstudio/rserver.conf #熟悉么~~
#查看是否安装正确
sudo rstudio-server verify-installation
#启动
sudo rstudio-server start
#查看状态
sudo rstudio-server status
#停止
sudo rstudio-server stop
#重启
sudo rstudio-server restart
#查看服务端ip地址
ifconfig
&lt;/code>&lt;/pre>
&lt;h3 id="adduser">Adduser&lt;/h3>
&lt;pre>&lt;code class="language-SHELL">sudo adduser zhangjn
usermod -aG sudo zhangjn
su zhangjn
# test the root privileges
sudo ls -la /root
# change password
passwd zhangjn
# copy ssh file and directory structure to new user account in existing session
rsync --archive --chown=zhangjn:zhangjn ~/.ssh /home/zhangjn
&lt;/code>&lt;/pre>
&lt;h3 id="shiny-serverhttpsrstudiocomproductsshinydownload-serverubuntu">
&lt;a href="https://rstudio.com/products/shiny/download-server/ubuntu/" target="_blank" rel="noopener">Shiny server&lt;/a>&lt;/h3>
&lt;pre>&lt;code class="language-SHELL"># install the Shiny R package
sudo su - \
-c &amp;quot;R -e \&amp;quot;install.packages('shiny', repos='https://cran.rstudio.com/')\&amp;quot;&amp;quot;
sudo apt-get install gdebi-core
wget https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-1.5.13.944-amd64.deb
sudo gdebi shiny-server-1.5.13.944-amd64.deb
&lt;/code>&lt;/pre>
&lt;p>
&lt;a href="https://www.zhangjn.xyz/post/shiny-server/" target="_blank" rel="noopener">Change user&lt;/a>&lt;/p>
&lt;pre>&lt;code class="language-SHELL">nano /etc/shiny-server/shiny-server.conf
&lt;/code>&lt;/pre>
&lt;p>Restart Shiny Server Pro so that the activated version will get started.&lt;/p>
&lt;pre>&lt;code class="language-SHELL">sudo systemctl restart shiny-server
&lt;/code>&lt;/pre>
&lt;h3 id="install-seurat-package-in-rstudio">Install Seurat package in Rstudio&lt;/h3>
&lt;pre>&lt;code class="language-SHELL"># Problem installing R packages that depends from &amp;quot;OpenSSL&amp;quot; library
sudo apt-get install libssl-dev
# Problem installing R packages that depends from &amp;quot;httr&amp;quot; library
sudo apt-get install libcurl4-openssl-dev
# Problem installing R packages that depends from &amp;quot;metap&amp;quot; library
# install package using BiocManager
if (!requireNamespace(&amp;quot;BiocManager&amp;quot;, quietly = TRUE))
install.packages(&amp;quot;BiocManager&amp;quot;)
BiocManager::install(&amp;quot;multtest&amp;quot;)
BiocManager::install(&amp;quot;metap&amp;quot;)
&lt;/code>&lt;/pre>
&lt;h3 id="configuring-nginx-on-your-serverhttpssupportrstudiocomhcen-usarticles213733868-running-shiny-server-with-a-proxy">
&lt;a href="https://support.rstudio.com/hc/en-us/articles/213733868-Running-Shiny-Server-with-a-Proxy" target="_blank" rel="noopener">Configuring nginx on your server&lt;/a>&lt;/h3>
&lt;pre>&lt;code class="language-SHELL">
sudo apt-get -y install nginx
# make a backup of the nginx configuration
sudo cp /etc/nginx/sites-enabled/default /etc/nginx/sites-enabled/default-backup
# 配置自己摸索下
sudo nano /etc/nginx/sites-enabled/default
&lt;/code>&lt;/pre>
&lt;h3 id="acmesh-and-ssl">&lt;code>acme.sh&lt;/code> and &lt;code>ssl&lt;/code>&lt;/h3>
&lt;pre>&lt;code class="language-SHELL">curl https://get.acme.sh | sh
# You’ll need to generate an API key at https://www.namesilo.com/account_api.php
# Optionally you may restrict the access to an IP range there.
# for namesilo ssl
export Namesilo_Key=&amp;quot;XXXXXXXXXXXXX&amp;quot;
~/.acme.sh/acme.sh --issue --dns dns_namesilo --dnssleep 2500 -d scrna.zhangjn.xyz
~/.acme.sh/acme.sh --issue --dns dns_namesilo --dnssleep 2500 -d shiny.zhangjn.xyz
~/.acme.sh/acme.sh --installcert -d shiny.zhangjn.xyz \
--key-file /etc/nginx/ssl/shiny.zhangjn.xyz.key \
--fullchain-file /etc/nginx/ssl/fullchain.cer \
--fullchain-file /etc/nginx/ssl/ca.cer \
--reloadcmd &amp;quot;systemctl restart nginx.service&amp;quot;
`TLSv1`证书会导致不安全，记得修改下。
# for aliyun ssl
export Ali_Key=&amp;quot;XXXXXXXXXXXXXXXX&amp;quot;
export Ali_Secret=&amp;quot;XXXXXXXXXXXXXXXXXXXX&amp;quot;
~/.acme.sh/acme.sh --issue --dns dns_ali -d avianscu.com -d scrna.avianscu.com
~/.acme.sh/acme.sh --installcert -d avianscu.com \
--key-file /etc/nginx/ssl2/avianscu.com.key \
--fullchain-file /etc/nginx/ssl2/fullchain.cer \
--reloadcmd &amp;quot;systemctl restart nginx.service&amp;quot;
&lt;/code>&lt;/pre>
&lt;h2 id="frp设置httpsgithubcomfatedierfrpblobmasterreadme_zhmd">
&lt;a href="https://github.com/fatedier/frp/blob/master/README_zh.md" target="_blank" rel="noopener">Frp设置&lt;/a>&lt;/h2>
&lt;pre>&lt;code class="language-shell"># install
wget https://github.com/fatedier/frp/releases/download/v0.22.0/frp_0.22.0_linux_amd64.tar.gz
tar -zxvf frp_0.22.0_linux_amd64.tar.gz
# 设置frp服务的系统自启动等操作，很方便，frps和frpc注意切换
sudo nano /lib/systemd/system/frps.service
# 在frps.service里写入以下内容
[Unit]
Description=frps service
After=network.target syslog.target
Wants=network.target
[Service]
Type=simple
# 启动服务的命令（此处写你的frps的实际安装目录）
ExecStart=/root/soft/frp_0.32.1_linux_amd64/frps -c /root/soft/frp_0.32.1_linux_amd64/frps/frps.ini
[Install]
WantedBy=multi-user.target
# Ubuntu设置frp的系统控制
sudo systemctl start frps
sudo systemctl enable frps
sudo systemctl restart frps
sudo systemctl stop frps
sudo systemctl status frps
# 多个服务端连接同一个客户端，小技巧喔
./frpc -c ./frpc1.ini
./frpc -c ./frpc2.ini
./frpc -c ./frpc3.ini
&lt;/code>&lt;/pre></description></item><item><title>Gene ID转换</title><link>/post/gene-id%E8%BD%AC%E6%8D%A2/</link><pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate><guid>/post/gene-id%E8%BD%AC%E6%8D%A2/</guid><description>&lt;h3 id="为什么要在r中进行id转换">为什么要在R中进行ID转换&lt;/h3>
&lt;p>在转录组数据或者其他分析中，好吧，其实是因为我做的物种是家鸡，根本就没有人和鼠那样有着非常完善和时刻更新的数据库做为支持，我经常会遇见GeneID转换，同源基因转换的问题，之前一直利用&lt;code>Ensembl&lt;/code>主页里面的&lt;code>biomart&lt;/code>进行数据下载，然后在excel里面利用vlookup进行操作，哎，费时费力，而且不能高度自动化和重复化~~（传统湿实验室人员的基本操作思维）~~，现在已经开始将大部分操作都在R里面进行了，刚好学习了&lt;code>biomaRt&lt;/code>包可以完美替代之前的操作流程，下面就是相关笔记及备注：&lt;/p>
&lt;blockquote>
&lt;p>好吧，这是第一篇Rmd笔记，Rmarkdown真的超级好用啊！&lt;/p>
&lt;/blockquote>
&lt;h3 id="安装所需的软件包">安装所需的软件包&lt;/h3>
&lt;p>下面的R包也包括Y叔的&lt;code>clusterProfiler&lt;/code>了，里面也有ID转换的板块，也是非常实用的，一并汇总了。&lt;/p>
&lt;pre>&lt;code>if (!requireNamespace(&amp;quot;BiocManager&amp;quot;, quietly = TRUE))
install.packages(&amp;quot;BiocManager&amp;quot;)
BiocManager::install(&amp;quot;biomaRt&amp;quot;)
&lt;/code>&lt;/pre>
&lt;h3 id="biomart示例">&lt;code>biomaRt&lt;/code>示例&lt;/h3>
&lt;p>首先还是推荐看
&lt;a href="https://www.bioconductor.org/packages/devel/bioc/vignettes/biomaRt/inst/doc/biomaRt.html" target="_blank" rel="noopener">官方文档&lt;/a>，没有什么攻略比官方文档更靠谱了，除非懒~&lt;/p>
&lt;pre>&lt;code class="language-r">library(&amp;quot;biomaRt&amp;quot;)
library(org.Gg.eg.db)
library(org.Hs.eg.db)
library(clusterProfiler)
library(DOSE)
# 查看Marts库
listMarts(host=&amp;quot;asia.ensembl.org&amp;quot;)
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## biomart version
## 1 ENSEMBL_MART_ENSEMBL Ensembl Genes 99
## 2 ENSEMBL_MART_MOUSE Mouse strains 99
## 3 ENSEMBL_MART_SNP Ensembl Variation 99
## 4 ENSEMBL_MART_FUNCGEN Ensembl Regulation 99
&lt;/code>&lt;/pre>
&lt;h3 id="一步到位代码">一步到位代码&lt;/h3>
&lt;p>选择所需的数据库代码，我需要的是人和家鸡的数据库，直接定义到&lt;code>dataset&lt;/code>即可，有时网速很慢，添加了对应地区的&lt;code>host&lt;/code>。&lt;/p>
&lt;pre>&lt;code class="language-r"># 定义人对应数据mart
human = useMart(&amp;quot;ensembl&amp;quot;,dataset=&amp;quot;hsapiens_gene_ensembl&amp;quot;,host=&amp;quot;asia.ensembl.org&amp;quot;)
# 定义家鸡对应数据mart
chicken = useMart(&amp;quot;ensembl&amp;quot;,dataset=&amp;quot;ggallus_gene_ensembl&amp;quot;,host=&amp;quot;asia.ensembl.org&amp;quot;)
# 查看对应`attributes`说明
listAttributes(chicken)[1:40,]
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## name description
## 1 ensembl_gene_id Gene stable ID
## 2 ensembl_gene_id_version Gene stable ID version
## 3 ensembl_transcript_id Transcript stable ID
## 4 ensembl_transcript_id_version Transcript stable ID version
## 5 ensembl_peptide_id Protein stable ID
## 6 ensembl_peptide_id_version Protein stable ID version
## 7 ensembl_exon_id Exon stable ID
## 8 description Gene description
## 9 chromosome_name Chromosome/scaffold name
## 10 start_position Gene start (bp)
## 11 end_position Gene end (bp)
## 12 strand Strand
## 13 band Karyotype band
## 14 transcript_start Transcript start (bp)
## 15 transcript_end Transcript end (bp)
## 16 transcription_start_site Transcription start site (TSS)
## 17 transcript_length Transcript length (including UTRs and CDS)
## 18 transcript_appris APPRIS annotation
## 19 external_gene_name Gene name
## 20 external_gene_source Source of gene name
## 21 external_transcript_name Transcript name
## 22 external_transcript_source_name Source of transcript name
## 23 transcript_count Transcript count
## 24 percentage_gene_gc_content Gene % GC content
## 25 gene_biotype Gene type
## 26 transcript_biotype Transcript type
## 27 source Source (gene)
## 28 transcript_source Source (transcript)
## 29 version Version (gene)
## 30 transcript_version Version (transcript)
## 31 peptide_version Version (protein)
## 32 external_synonym Gene Synonym
## 33 phenotype_description Phenotype description
## 34 source_name Source name
## 35 study_external_id Study external reference
## 36 strain_name Strain name
## 37 strain_gender Strain gender
## 38 p_value P value
## 39 go_id GO term accession
## 40 name_1006 GO term name
## page
## 1 feature_page
## 2 feature_page
## 3 feature_page
## 4 feature_page
## 5 feature_page
## 6 feature_page
## 7 feature_page
## 8 feature_page
## 9 feature_page
## 10 feature_page
## 11 feature_page
## 12 feature_page
## 13 feature_page
## 14 feature_page
## 15 feature_page
## 16 feature_page
## 17 feature_page
## 18 feature_page
## 19 feature_page
## 20 feature_page
## 21 feature_page
## 22 feature_page
## 23 feature_page
## 24 feature_page
## 25 feature_page
## 26 feature_page
## 27 feature_page
## 28 feature_page
## 29 feature_page
## 30 feature_page
## 31 feature_page
## 32 feature_page
## 33 feature_page
## 34 feature_page
## 35 feature_page
## 36 feature_page
## 37 feature_page
## 38 feature_page
## 39 feature_page
## 40 feature_page
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-r">listAttributes(human)[1:10,]
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## name description page
## 1 ensembl_gene_id Gene stable ID feature_page
## 2 ensembl_gene_id_version Gene stable ID version feature_page
## 3 ensembl_transcript_id Transcript stable ID feature_page
## 4 ensembl_transcript_id_version Transcript stable ID version feature_page
## 5 ensembl_peptide_id Protein stable ID feature_page
## 6 ensembl_peptide_id_version Protein stable ID version feature_page
## 7 ensembl_exon_id Exon stable ID feature_page
## 8 description Gene description feature_page
## 9 chromosome_name Chromosome/scaffold name feature_page
## 10 start_position Gene start (bp) feature_page
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-r"># 进行ID转换
hgnc_swissprot &amp;lt;- getBM(attributes=c('ensembl_gene_id','ensembl_transcript_id','hgnc_symbol','uniprotswissprot'),filters = 'ensembl_gene_id', values = 'ENSG00000139618', mart = human)
hgnc_swissprot
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## ensembl_gene_id ensembl_transcript_id hgnc_symbol uniprotswissprot
## 1 ENSG00000139618 ENST00000671466 BRCA2
## 2 ENSG00000139618 ENST00000380152 BRCA2 P51587
## 3 ENSG00000139618 ENST00000530893 BRCA2
## 4 ENSG00000139618 ENST00000670614 BRCA2
## 5 ENSG00000139618 ENST00000665585 BRCA2
## 6 ENSG00000139618 ENST00000528762 BRCA2
## 7 ENSG00000139618 ENST00000470094 BRCA2
## 8 ENSG00000139618 ENST00000666593 BRCA2
## 9 ENSG00000139618 ENST00000544455 BRCA2 P51587
&lt;/code>&lt;/pre>
&lt;h3 id="同源基因id转换代码">同源基因ID转换代码&lt;/h3>
&lt;p>跨物种同源基因转换使用&lt;code>getLDS&lt;/code>命令即可，也是非常方便，但是有一个问题就是家鸡一个基因可能对应多个人的基因，系统会自动添加对应的旁系同源基因，所以转换后的数据使用需要小心，可能需要人工排查一下，或者人为的去掉部分数据。&lt;/p>
&lt;pre>&lt;code class="language-r">#human = useMart(&amp;quot;ensembl&amp;quot;,dataset=&amp;quot;hsapiens_gene_ensembl&amp;quot;,host=&amp;quot;asia.ensembl.org&amp;quot;)
#chicken = useMart(&amp;quot;ensembl&amp;quot;,dataset=&amp;quot;ggallus_gene_ensembl&amp;quot;,host=&amp;quot;asia.ensembl.org&amp;quot;)
genelist_megre &amp;lt;- c(&amp;quot;ENSGALG00000001136&amp;quot;,&amp;quot;ENSGALG00000005956&amp;quot;,&amp;quot;ENSGALG00000006407&amp;quot;,&amp;quot;ENSGALG00000007728&amp;quot;,&amp;quot;ENSGALG00000009628&amp;quot;,&amp;quot;ENSGALG00000010316&amp;quot;,&amp;quot;ENSGALG00000011190&amp;quot;,&amp;quot;ENSGALG00000011687&amp;quot;,&amp;quot;ENSGALG00000011806&amp;quot;,&amp;quot;ENSGALG00000015656&amp;quot;)
genelist_megre
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## [1] &amp;quot;ENSGALG00000001136&amp;quot; &amp;quot;ENSGALG00000005956&amp;quot; &amp;quot;ENSGALG00000006407&amp;quot;
## [4] &amp;quot;ENSGALG00000007728&amp;quot; &amp;quot;ENSGALG00000009628&amp;quot; &amp;quot;ENSGALG00000010316&amp;quot;
## [7] &amp;quot;ENSGALG00000011190&amp;quot; &amp;quot;ENSGALG00000011687&amp;quot; &amp;quot;ENSGALG00000011806&amp;quot;
## [10] &amp;quot;ENSGALG00000015656&amp;quot;
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-r">genelist_megre_Hs &amp;lt;- getLDS(attributes = c(&amp;quot;ensembl_gene_id&amp;quot;,&amp;quot;entrezgene_id&amp;quot;, &amp;quot;external_gene_name&amp;quot;),
filters = &amp;quot;ensembl_gene_id&amp;quot;,
values = genelist_megre,
mart = chicken,
attributesL = c(&amp;quot;ensembl_gene_id&amp;quot;,&amp;quot;entrezgene_id&amp;quot;,&amp;quot;external_gene_name&amp;quot;),
martL = human)
genelist_megre_Hs
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## Gene.stable.ID NCBI.gene.ID Gene.name Gene.stable.ID.1 NCBI.gene.ID.1
## 1 ENSGALG00000007728 770734 ENSG00000100033 5625
## 2 ENSGALG00000005956 423774 ENSG00000264230 728113
## 3 ENSGALG00000011687 100859120 ENSG00000185567 113146
## 4 ENSGALG00000005956 423774 ENSG00000265190 653145
## 5 ENSGALG00000011806 100859223 ENSG00000173702 56667
## 6 ENSGALG00000011190 100857411 PLAC8 ENSG00000145287 51316
## 7 ENSGALG00000006407 378902 ENSG00000120889 8795
## 8 ENSGALG00000006407 378902 ENSG00000173535 8794
## 9 ENSGALG00000006407 378902 ENSG00000173530 8793
## 10 ENSGALG00000007728 770734 ENSG00000277196 102724788
## Gene.name.1
## 1 PRODH
## 2 ANXA8L1
## 3 AHNAK2
## 4 ANXA8
## 5 MUC13
## 6 PLAC8
## 7 TNFRSF10B
## 8 TNFRSF10C
## 9 TNFRSF10D
## 10 AC007325.2
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>插一句，总算知道为什么R代码有规范了，参数主动换行，真的好看太多了。&lt;/p>
&lt;/blockquote>
&lt;h3 id="提取蛋白dna序列并导出fasta格式文件">提取蛋白/DNA序列并导出FASTA格式文件&lt;/h3>
&lt;p>使用过程中发现居然还可以调取序列等信息，少量操作也就不用打开网页，快速方便完成氨基酸/核酸序列的获取，非常实用！&lt;/p>
&lt;pre>&lt;code class="language-r">protein = getSequence(id=c(&amp;quot;GRP&amp;quot;),
type=&amp;quot;external_gene_name&amp;quot;,
seqType=&amp;quot;peptide&amp;quot;,
mart= chicken)
protein
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## peptide
## 1 MGGGGPRRPGTLPLLALLALLAAHGGAAPLQPGGSPALTKIYPRGSHWAVGHLMGKKSTGDFPYAYEEENKIPLSASPENIKQLDDYLQREEMSKHLLQLLEGNENKSAHFSKGGLPWHTRNSWETDDSSSWKDVVEYLLQVVNMKESAPS*
## 2 MGGGGPRRPGTLPLLALLALLAAHGGAAPLQPGGSPALTKIYPRGSHWAVGHLMGKKSTGDFPYAYEEENKIPLSASPENIKQLDDYLQREEMSKHLLQLLEGNENKSAHFSKGGLPWHTRNSWETDDSSSWKDVSRTRCVSAFLTVTFCSKVAYQLCPTSALS*
## external_gene_name
## 1 GRP
## 2 GRP
&lt;/code>&lt;/pre>
&lt;h3 id="混杂基因名称转换处理这里使用了bitr进行示例">混杂基因名称转换处理，这里使用了&lt;code>bitr&lt;/code>进行示例&lt;/h3>
&lt;p>在获得基因列表是不可避免会出现name和ID混杂在一起的情况，目前只能采用分批操作的流程进行处理，有更好方法再更新。&lt;/p>
&lt;pre>&lt;code class="language-r">genelist &amp;lt;- c(&amp;quot;S100A6&amp;quot;,&amp;quot;S100A10&amp;quot;,&amp;quot;SNCG&amp;quot;,&amp;quot;S100A1&amp;quot;,&amp;quot;S100A11&amp;quot;,&amp;quot;ID3&amp;quot;,&amp;quot;ENSGALG00000011190&amp;quot;,&amp;quot;AKR1B10&amp;quot;,&amp;quot;CSRP1&amp;quot;,&amp;quot;SPARCL1&amp;quot;,&amp;quot;HBEGF&amp;quot;,&amp;quot;FAM107B&amp;quot;,&amp;quot;ENSGALG00000009628&amp;quot;,&amp;quot;ENSGALG00000010316&amp;quot;,&amp;quot;ENSGALG00000011190&amp;quot;,&amp;quot;ENSGALG00000011687&amp;quot;,&amp;quot;ENSGALG00000011806&amp;quot;,&amp;quot;ENSGALG00000015656&amp;quot;)
genelist
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## [1] &amp;quot;S100A6&amp;quot; &amp;quot;S100A10&amp;quot; &amp;quot;SNCG&amp;quot;
## [4] &amp;quot;S100A1&amp;quot; &amp;quot;S100A11&amp;quot; &amp;quot;ID3&amp;quot;
## [7] &amp;quot;ENSGALG00000011190&amp;quot; &amp;quot;AKR1B10&amp;quot; &amp;quot;CSRP1&amp;quot;
## [10] &amp;quot;SPARCL1&amp;quot; &amp;quot;HBEGF&amp;quot; &amp;quot;FAM107B&amp;quot;
## [13] &amp;quot;ENSGALG00000009628&amp;quot; &amp;quot;ENSGALG00000010316&amp;quot; &amp;quot;ENSGALG00000011190&amp;quot;
## [16] &amp;quot;ENSGALG00000011687&amp;quot; &amp;quot;ENSGALG00000011806&amp;quot; &amp;quot;ENSGALG00000015656&amp;quot;
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-r"># 定义ENSEMBL命名的基因
index &amp;lt;- grep(&amp;quot;ENSGALG&amp;quot;, genelist)
index
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## [1] 7 13 14 15 16 17 18
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-r"># 筛选ENSGALG命名的基因并转换
genelistA &amp;lt;- genelist[index]
geneA = bitr(genelistA, fromType=&amp;quot;ENSEMBL&amp;quot;, toType=c(&amp;quot;SYMBOL&amp;quot;, &amp;quot;ENTREZID&amp;quot;), OrgDb=&amp;quot;org.Gg.eg.db&amp;quot;)
head(geneA)
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## ENSEMBL SYMBOL ENTREZID
## 1 ENSGALG00000011190 PLACL2 100857411
## 2 ENSGALG00000009628 KCTD12 425504
## 3 ENSGALG00000010316 FRAS1 422506
## 4 ENSGALG00000011687 AHNAK2 100859120
## 5 ENSGALG00000011806 MUC13 100859223
## 6 ENSGALG00000015656 AKAP2 100533110
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-r"># 筛选SYMBOL命名的基因并转换
genelistB &amp;lt;- genelist[-index]
geneB = bitr(genelistB, fromType=&amp;quot;SYMBOL&amp;quot;, toType=c(&amp;quot;ENSEMBL&amp;quot;, &amp;quot;ENTREZID&amp;quot;), OrgDb=&amp;quot;org.Gg.eg.db&amp;quot;)
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## Warning in bitr(genelistB, fromType = &amp;quot;SYMBOL&amp;quot;, toType = c(&amp;quot;ENSEMBL&amp;quot;,
## &amp;quot;ENTREZID&amp;quot;), : 9.09% of input gene IDs are fail to map...
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-r">head(geneB)
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## SYMBOL ENSEMBL ENTREZID
## 1 S100A6 ENSGALG00000041826 373951
## 2 S100A10 ENSGALG00000028774 396506
## 3 SNCG ENSGALG00000002015 395392
## 4 S100A1 ENSGALG00000034458 100858258
## 5 S100A11 ENSGALG00000036711 396075
## 6 ID3 ENSGALG00000035317 395281
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-r">gene &amp;lt;- rbind(geneA,geneB)
gene
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## ENSEMBL SYMBOL ENTREZID
## 1 ENSGALG00000011190 PLACL2 100857411
## 2 ENSGALG00000009628 KCTD12 425504
## 3 ENSGALG00000010316 FRAS1 422506
## 4 ENSGALG00000011687 AHNAK2 100859120
## 5 ENSGALG00000011806 MUC13 100859223
## 6 ENSGALG00000015656 AKAP2 100533110
## 12 ENSGALG00000041826 S100A6 373951
## 21 ENSGALG00000028774 S100A10 396506
## 31 ENSGALG00000002015 SNCG 395392
## 41 ENSGALG00000034458 S100A1 100858258
## 51 ENSGALG00000036711 S100A11 396075
## 61 ENSGALG00000035317 ID3 395281
## 8 ENSGALG00000000318 CSRP1 396176
## 9 ENSGALG00000010929 SPARCL1 422586
## 10 ENSGALG00000000949 HBEGF 395654
## 11 ENSGALG00000033226 FAM107B 426376
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-r">summary(gene)
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## ENSEMBL SYMBOL ENTREZID
## Length:16 Length:16 Length:16
## Class :character Class :character Class :character
## Mode :character Mode :character Mode :character
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-r"># 同时可以导出到本地csv文件
#write.csv(as.data.frame(gene),&amp;quot;./gene.csv&amp;quot;,row.names =FALSE)
&lt;/code>&lt;/pre>
&lt;h3 id="当然使用getbm也可以实现id转换但是结果会出现不少信息残缺还是推荐bitr">当然，使用&lt;code>getBM&lt;/code>也可以实现ID转换，但是结果会出现不少信息残缺，还是推荐&lt;code>bitr&lt;/code>&lt;/h3>
&lt;pre>&lt;code class="language-r">gene_A &amp;lt;- getBM(attributes=c(&amp;quot;ensembl_gene_id&amp;quot;, &amp;quot;external_gene_name&amp;quot;, &amp;quot;entrezgene_id&amp;quot;),
filters = 'ensembl_gene_id',
values = genelistA,
mart = chicken)
gene_B &amp;lt;- getBM(attributes=c(&amp;quot;ensembl_gene_id&amp;quot;, &amp;quot;external_gene_name&amp;quot;, &amp;quot;entrezgene_id&amp;quot;),
filters = 'external_gene_name',
values = genelistB,
mart = chicken)
gene_ABmegre &amp;lt;- rbind(gene_A,gene_B)
gene_ABmegre
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## ensembl_gene_id external_gene_name entrezgene_id
## 1 ENSGALG00000009628 425504
## 2 ENSGALG00000010316 422506
## 3 ENSGALG00000011190 PLAC8 100857411
## 4 ENSGALG00000011687 100859120
## 5 ENSGALG00000011806 100859223
## 6 ENSGALG00000015656 PALM2AKAP2 100533110
## 7 ENSGALG00000028774 S100A10 396506
## 8 ENSGALG00000000318 CSRP1 396176
## 9 ENSGALG00000036711 S100A11 396075
## 10 ENSGALG00000000949 HBEGF 395654
## 11 ENSGALG00000002015 SNCG 395392
## 12 ENSGALG00000013072 AKR1B10 395338
## 13 ENSGALG00000041826 S100A6 373951
## 14 ENSGALG00000034458 S100A1 100858258
## 15 ENSGALG00000010929 SPARCL1 422586
## 16 ENSGALG00000033226 FAM107B 426376
## 17 ENSGALG00000035317 ID3 395281
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-r">summary(gene_ABmegre)
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## ensembl_gene_id external_gene_name entrezgene_id
## Length:17 Length:17 Min. : 373951
## Class :character Class :character 1st Qu.: 395654
## Mode :character Mode :character Median : 422506
## Mean : 29929910
## 3rd Qu.:100533110
## Max. :100859223
&lt;/code>&lt;/pre>
&lt;h3 id="小结">小结&lt;/h3>
&lt;p>学习使人懒惰，以前要花半小时进行EXCEL文件准备和ID转换，现在也就几分钟，成功偷懒~~&lt;/p>
&lt;h3 id="参考资料">&lt;del>参考资料&lt;/del>&lt;/h3></description></item></channel></rss>