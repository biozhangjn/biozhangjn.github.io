<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Academic | Jiannan Zhang</title><link>/tags/academic/</link><atom:link href="/tags/academic/index.xml" rel="self" type="application/rss+xml"/><description>Academic</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Fri, 13 Mar 2020 00:00:00 +0000</lastBuildDate><image><url>img/map[gravatar:%!s(bool=false) shape:circle]</url><title>Academic</title><link>/tags/academic/</link></image><item><title>Gene ID转换</title><link>/post/gene-id%E8%BD%AC%E6%8D%A2/</link><pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate><guid>/post/gene-id%E8%BD%AC%E6%8D%A2/</guid><description>
&lt;div id="为什么要在r中进行id转换" class="section level3">
&lt;h3>为什么要在R中进行ID转换&lt;/h3>
&lt;p>在转录组数据或者其他分析中，好吧，其实是因为我做的物种是家鸡，根本就没有人和鼠那样有着非常完善和时刻更新的数据库做为支持，我经常会遇见GeneID转换，同源基因转换的问题，之前一直利用&lt;code>Ensembl&lt;/code>主页里面的&lt;code>biomart&lt;/code>进行数据下载，然后在excel里面利用vlookup进行操作，哎，费时费力，而且不能高度自动化和重复化&lt;del>（传统湿实验室人员的基本操作思维）&lt;/del>，现在已经开始将大部分操作都在R里面进行了，刚好学习了&lt;code>biomaRt&lt;/code>包可以完美替代之前的操作流程，下面就是相关笔记及备注：&lt;/p>
&lt;blockquote>
&lt;p>好吧，这是第一篇Rmd笔记，Rmarkdown真的超级好用啊！&lt;/p>
&lt;/blockquote>
&lt;/div>
&lt;div id="安装所需的软件包" class="section level3">
&lt;h3>安装所需的软件包&lt;/h3>
&lt;p>下面的R包也包括Y叔的&lt;code>clusterProfiler&lt;/code>了，里面也有ID转换的板块，也是非常实用的，一并汇总了。&lt;/p>
&lt;pre>&lt;code>if (!requireNamespace(&amp;quot;BiocManager&amp;quot;, quietly = TRUE))
install.packages(&amp;quot;BiocManager&amp;quot;)
BiocManager::install(&amp;quot;biomaRt&amp;quot;)&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="biomart示例" class="section level3">
&lt;h3>&lt;code>biomaRt&lt;/code>示例&lt;/h3>
&lt;p>首先还是推荐看&lt;a href="https://www.bioconductor.org/packages/devel/bioc/vignettes/biomaRt/inst/doc/biomaRt.html">官方文档&lt;/a>，没有什么攻略比官方文档更靠谱了，除非懒~&lt;/p>
&lt;pre class="r">&lt;code>library(&amp;quot;biomaRt&amp;quot;)
library(org.Gg.eg.db)
library(org.Hs.eg.db)
library(clusterProfiler)
library(DOSE)
# 查看Marts库
listMarts(host=&amp;quot;asia.ensembl.org&amp;quot;)&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## biomart version
## 1 ENSEMBL_MART_ENSEMBL Ensembl Genes 99
## 2 ENSEMBL_MART_MOUSE Mouse strains 99
## 3 ENSEMBL_MART_SNP Ensembl Variation 99
## 4 ENSEMBL_MART_FUNCGEN Ensembl Regulation 99&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="一步到位代码" class="section level3">
&lt;h3>一步到位代码&lt;/h3>
&lt;p>选择所需的数据库代码，我需要的是人和家鸡的数据库，直接定义到&lt;code>dataset&lt;/code>即可，有时网速很慢，添加了对应地区的&lt;code>host&lt;/code>。&lt;/p>
&lt;pre class="r">&lt;code># 定义人对应数据mart
human = useMart(&amp;quot;ensembl&amp;quot;,dataset=&amp;quot;hsapiens_gene_ensembl&amp;quot;,host=&amp;quot;asia.ensembl.org&amp;quot;)
# 定义家鸡对应数据mart
chicken = useMart(&amp;quot;ensembl&amp;quot;,dataset=&amp;quot;ggallus_gene_ensembl&amp;quot;,host=&amp;quot;asia.ensembl.org&amp;quot;)
# 查看对应`attributes`说明
listAttributes(chicken)[1:40,]&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## name description
## 1 ensembl_gene_id Gene stable ID
## 2 ensembl_gene_id_version Gene stable ID version
## 3 ensembl_transcript_id Transcript stable ID
## 4 ensembl_transcript_id_version Transcript stable ID version
## 5 ensembl_peptide_id Protein stable ID
## 6 ensembl_peptide_id_version Protein stable ID version
## 7 ensembl_exon_id Exon stable ID
## 8 description Gene description
## 9 chromosome_name Chromosome/scaffold name
## 10 start_position Gene start (bp)
## 11 end_position Gene end (bp)
## 12 strand Strand
## 13 band Karyotype band
## 14 transcript_start Transcript start (bp)
## 15 transcript_end Transcript end (bp)
## 16 transcription_start_site Transcription start site (TSS)
## 17 transcript_length Transcript length (including UTRs and CDS)
## 18 transcript_appris APPRIS annotation
## 19 external_gene_name Gene name
## 20 external_gene_source Source of gene name
## 21 external_transcript_name Transcript name
## 22 external_transcript_source_name Source of transcript name
## 23 transcript_count Transcript count
## 24 percentage_gene_gc_content Gene % GC content
## 25 gene_biotype Gene type
## 26 transcript_biotype Transcript type
## 27 source Source (gene)
## 28 transcript_source Source (transcript)
## 29 version Version (gene)
## 30 transcript_version Version (transcript)
## 31 peptide_version Version (protein)
## 32 external_synonym Gene Synonym
## 33 phenotype_description Phenotype description
## 34 source_name Source name
## 35 study_external_id Study external reference
## 36 strain_name Strain name
## 37 strain_gender Strain gender
## 38 p_value P value
## 39 go_id GO term accession
## 40 name_1006 GO term name
## page
## 1 feature_page
## 2 feature_page
## 3 feature_page
## 4 feature_page
## 5 feature_page
## 6 feature_page
## 7 feature_page
## 8 feature_page
## 9 feature_page
## 10 feature_page
## 11 feature_page
## 12 feature_page
## 13 feature_page
## 14 feature_page
## 15 feature_page
## 16 feature_page
## 17 feature_page
## 18 feature_page
## 19 feature_page
## 20 feature_page
## 21 feature_page
## 22 feature_page
## 23 feature_page
## 24 feature_page
## 25 feature_page
## 26 feature_page
## 27 feature_page
## 28 feature_page
## 29 feature_page
## 30 feature_page
## 31 feature_page
## 32 feature_page
## 33 feature_page
## 34 feature_page
## 35 feature_page
## 36 feature_page
## 37 feature_page
## 38 feature_page
## 39 feature_page
## 40 feature_page&lt;/code>&lt;/pre>
&lt;pre class="r">&lt;code>listAttributes(human)[1:10,]&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## name description page
## 1 ensembl_gene_id Gene stable ID feature_page
## 2 ensembl_gene_id_version Gene stable ID version feature_page
## 3 ensembl_transcript_id Transcript stable ID feature_page
## 4 ensembl_transcript_id_version Transcript stable ID version feature_page
## 5 ensembl_peptide_id Protein stable ID feature_page
## 6 ensembl_peptide_id_version Protein stable ID version feature_page
## 7 ensembl_exon_id Exon stable ID feature_page
## 8 description Gene description feature_page
## 9 chromosome_name Chromosome/scaffold name feature_page
## 10 start_position Gene start (bp) feature_page&lt;/code>&lt;/pre>
&lt;pre class="r">&lt;code># 进行ID转换
hgnc_swissprot &amp;lt;- getBM(attributes=c(&amp;#39;ensembl_gene_id&amp;#39;,&amp;#39;ensembl_transcript_id&amp;#39;,&amp;#39;hgnc_symbol&amp;#39;,&amp;#39;uniprotswissprot&amp;#39;),filters = &amp;#39;ensembl_gene_id&amp;#39;, values = &amp;#39;ENSG00000139618&amp;#39;, mart = human)
hgnc_swissprot&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## ensembl_gene_id ensembl_transcript_id hgnc_symbol uniprotswissprot
## 1 ENSG00000139618 ENST00000671466 BRCA2
## 2 ENSG00000139618 ENST00000380152 BRCA2 P51587
## 3 ENSG00000139618 ENST00000530893 BRCA2
## 4 ENSG00000139618 ENST00000670614 BRCA2
## 5 ENSG00000139618 ENST00000665585 BRCA2
## 6 ENSG00000139618 ENST00000528762 BRCA2
## 7 ENSG00000139618 ENST00000470094 BRCA2
## 8 ENSG00000139618 ENST00000666593 BRCA2
## 9 ENSG00000139618 ENST00000544455 BRCA2 P51587&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="同源基因id转换代码" class="section level3">
&lt;h3>同源基因ID转换代码&lt;/h3>
&lt;p>跨物种同源基因转换使用&lt;code>getLDS&lt;/code>命令即可，也是非常方便，但是有一个问题就是家鸡一个基因可能对应多个人的基因，系统会自动添加对应的旁系同源基因，所以转换后的数据使用需要小心，可能需要人工排查一下，或者人为的去掉部分数据。&lt;/p>
&lt;pre class="r">&lt;code>#human = useMart(&amp;quot;ensembl&amp;quot;,dataset=&amp;quot;hsapiens_gene_ensembl&amp;quot;,host=&amp;quot;asia.ensembl.org&amp;quot;)
#chicken = useMart(&amp;quot;ensembl&amp;quot;,dataset=&amp;quot;ggallus_gene_ensembl&amp;quot;,host=&amp;quot;asia.ensembl.org&amp;quot;)
genelist_megre &amp;lt;- c(&amp;quot;ENSGALG00000001136&amp;quot;,&amp;quot;ENSGALG00000005956&amp;quot;,&amp;quot;ENSGALG00000006407&amp;quot;,&amp;quot;ENSGALG00000007728&amp;quot;,&amp;quot;ENSGALG00000009628&amp;quot;,&amp;quot;ENSGALG00000010316&amp;quot;,&amp;quot;ENSGALG00000011190&amp;quot;,&amp;quot;ENSGALG00000011687&amp;quot;,&amp;quot;ENSGALG00000011806&amp;quot;,&amp;quot;ENSGALG00000015656&amp;quot;)
genelist_megre&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## [1] &amp;quot;ENSGALG00000001136&amp;quot; &amp;quot;ENSGALG00000005956&amp;quot; &amp;quot;ENSGALG00000006407&amp;quot;
## [4] &amp;quot;ENSGALG00000007728&amp;quot; &amp;quot;ENSGALG00000009628&amp;quot; &amp;quot;ENSGALG00000010316&amp;quot;
## [7] &amp;quot;ENSGALG00000011190&amp;quot; &amp;quot;ENSGALG00000011687&amp;quot; &amp;quot;ENSGALG00000011806&amp;quot;
## [10] &amp;quot;ENSGALG00000015656&amp;quot;&lt;/code>&lt;/pre>
&lt;pre class="r">&lt;code>genelist_megre_Hs &amp;lt;- getLDS(attributes = c(&amp;quot;ensembl_gene_id&amp;quot;,&amp;quot;entrezgene_id&amp;quot;, &amp;quot;external_gene_name&amp;quot;),
filters = &amp;quot;ensembl_gene_id&amp;quot;,
values = genelist_megre,
mart = chicken,
attributesL = c(&amp;quot;ensembl_gene_id&amp;quot;,&amp;quot;entrezgene_id&amp;quot;,&amp;quot;external_gene_name&amp;quot;),
martL = human)
genelist_megre_Hs&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## Gene.stable.ID NCBI.gene.ID Gene.name Gene.stable.ID.1 NCBI.gene.ID.1
## 1 ENSGALG00000007728 770734 ENSG00000100033 5625
## 2 ENSGALG00000005956 423774 ENSG00000264230 728113
## 3 ENSGALG00000011806 100859223 ENSG00000173702 56667
## 4 ENSGALG00000011190 100857411 PLAC8 ENSG00000145287 51316
## 5 ENSGALG00000005956 423774 ENSG00000265190 653145
## 6 ENSGALG00000011687 100859120 ENSG00000185567 113146
## 7 ENSGALG00000006407 378902 ENSG00000120889 8795
## 8 ENSGALG00000006407 378902 ENSG00000173535 8794
## 9 ENSGALG00000006407 378902 ENSG00000173530 8793
## 10 ENSGALG00000007728 770734 ENSG00000277196 102724788
## Gene.name.1
## 1 PRODH
## 2 ANXA8L1
## 3 MUC13
## 4 PLAC8
## 5 ANXA8
## 6 AHNAK2
## 7 TNFRSF10B
## 8 TNFRSF10C
## 9 TNFRSF10D
## 10 AC007325.2&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>插一句，总算知道为什么R代码有规范了，参数主动换行，真的好看太多了。&lt;/p>
&lt;/blockquote>
&lt;/div>
&lt;div id="提取蛋白dna序列并导出fasta格式文件" class="section level3">
&lt;h3>提取蛋白/DNA序列并导出FASTA格式文件&lt;/h3>
&lt;p>使用过程中发现居然还可以调取序列等信息，少量操作也就不用打开网页，快速方便完成氨基酸/核酸序列的获取，非常实用！&lt;/p>
&lt;pre class="r">&lt;code>protein = getSequence(id=c(&amp;quot;GRP&amp;quot;),
type=&amp;quot;external_gene_name&amp;quot;,
seqType=&amp;quot;peptide&amp;quot;,
mart= chicken)
protein&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## peptide
## 1 MGGGGPRRPGTLPLLALLALLAAHGGAAPLQPGGSPALTKIYPRGSHWAVGHLMGKKSTGDFPYAYEEENKIPLSASPENIKQLDDYLQREEMSKHLLQLLEGNENKSAHFSKGGLPWHTRNSWETDDSSSWKDVVEYLLQVVNMKESAPS*
## 2 MGGGGPRRPGTLPLLALLALLAAHGGAAPLQPGGSPALTKIYPRGSHWAVGHLMGKKSTGDFPYAYEEENKIPLSASPENIKQLDDYLQREEMSKHLLQLLEGNENKSAHFSKGGLPWHTRNSWETDDSSSWKDVSRTRCVSAFLTVTFCSKVAYQLCPTSALS*
## external_gene_name
## 1 GRP
## 2 GRP&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="混杂基因名称转换处理这里使用了bitr进行示例" class="section level3">
&lt;h3>混杂基因名称转换处理，这里使用了&lt;code>bitr&lt;/code>进行示例&lt;/h3>
&lt;p>在获得基因列表是不可避免会出现name和ID混杂在一起的情况，目前只能采用分批操作的流程进行处理，有更好方法再更新。&lt;/p>
&lt;pre class="r">&lt;code>genelist &amp;lt;- c(&amp;quot;S100A6&amp;quot;,&amp;quot;S100A10&amp;quot;,&amp;quot;SNCG&amp;quot;,&amp;quot;S100A1&amp;quot;,&amp;quot;S100A11&amp;quot;,&amp;quot;ID3&amp;quot;,&amp;quot;ENSGALG00000011190&amp;quot;,&amp;quot;AKR1B10&amp;quot;,&amp;quot;CSRP1&amp;quot;,&amp;quot;SPARCL1&amp;quot;,&amp;quot;HBEGF&amp;quot;,&amp;quot;FAM107B&amp;quot;,&amp;quot;ENSGALG00000009628&amp;quot;,&amp;quot;ENSGALG00000010316&amp;quot;,&amp;quot;ENSGALG00000011190&amp;quot;,&amp;quot;ENSGALG00000011687&amp;quot;,&amp;quot;ENSGALG00000011806&amp;quot;,&amp;quot;ENSGALG00000015656&amp;quot;)
genelist&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## [1] &amp;quot;S100A6&amp;quot; &amp;quot;S100A10&amp;quot; &amp;quot;SNCG&amp;quot;
## [4] &amp;quot;S100A1&amp;quot; &amp;quot;S100A11&amp;quot; &amp;quot;ID3&amp;quot;
## [7] &amp;quot;ENSGALG00000011190&amp;quot; &amp;quot;AKR1B10&amp;quot; &amp;quot;CSRP1&amp;quot;
## [10] &amp;quot;SPARCL1&amp;quot; &amp;quot;HBEGF&amp;quot; &amp;quot;FAM107B&amp;quot;
## [13] &amp;quot;ENSGALG00000009628&amp;quot; &amp;quot;ENSGALG00000010316&amp;quot; &amp;quot;ENSGALG00000011190&amp;quot;
## [16] &amp;quot;ENSGALG00000011687&amp;quot; &amp;quot;ENSGALG00000011806&amp;quot; &amp;quot;ENSGALG00000015656&amp;quot;&lt;/code>&lt;/pre>
&lt;pre class="r">&lt;code># 定义ENSEMBL命名的基因
index &amp;lt;- grep(&amp;quot;ENSGALG&amp;quot;, genelist)
index&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## [1] 7 13 14 15 16 17 18&lt;/code>&lt;/pre>
&lt;pre class="r">&lt;code># 筛选ENSGALG命名的基因并转换
genelistA &amp;lt;- genelist[index]
geneA = bitr(genelistA, fromType=&amp;quot;ENSEMBL&amp;quot;, toType=c(&amp;quot;SYMBOL&amp;quot;, &amp;quot;ENTREZID&amp;quot;), OrgDb=&amp;quot;org.Gg.eg.db&amp;quot;)
head(geneA)&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## ENSEMBL SYMBOL ENTREZID
## 1 ENSGALG00000011190 PLACL2 100857411
## 2 ENSGALG00000009628 KCTD12 425504
## 3 ENSGALG00000010316 FRAS1 422506
## 4 ENSGALG00000011687 AHNAK2 100859120
## 5 ENSGALG00000011806 MUC13 100859223
## 6 ENSGALG00000015656 PALM2AKAP2 100533110&lt;/code>&lt;/pre>
&lt;pre class="r">&lt;code># 筛选SYMBOL命名的基因并转换
genelistB &amp;lt;- genelist[-index]
geneB = bitr(genelistB, fromType=&amp;quot;SYMBOL&amp;quot;, toType=c(&amp;quot;ENSEMBL&amp;quot;, &amp;quot;ENTREZID&amp;quot;), OrgDb=&amp;quot;org.Gg.eg.db&amp;quot;)
head(geneB)&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## SYMBOL ENSEMBL ENTREZID
## 1 S100A6 ENSGALG00000041826 373951
## 2 S100A10 ENSGALG00000028774 396506
## 3 SNCG ENSGALG00000002015 395392
## 4 S100A1 ENSGALG00000034458 100858258
## 5 S100A11 ENSGALG00000036711 396075
## 6 ID3 ENSGALG00000035317 395281&lt;/code>&lt;/pre>
&lt;pre class="r">&lt;code>gene &amp;lt;- rbind(geneA,geneB)
gene&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## ENSEMBL SYMBOL ENTREZID
## 1 ENSGALG00000011190 PLACL2 100857411
## 2 ENSGALG00000009628 KCTD12 425504
## 3 ENSGALG00000010316 FRAS1 422506
## 4 ENSGALG00000011687 AHNAK2 100859120
## 5 ENSGALG00000011806 MUC13 100859223
## 6 ENSGALG00000015656 PALM2AKAP2 100533110
## 7 ENSGALG00000041826 S100A6 373951
## 8 ENSGALG00000028774 S100A10 396506
## 9 ENSGALG00000002015 SNCG 395392
## 10 ENSGALG00000034458 S100A1 100858258
## 11 ENSGALG00000036711 S100A11 396075
## 12 ENSGALG00000035317 ID3 395281
## 13 ENSGALG00000013072 AKR1B10 395338
## 14 ENSGALG00000000318 CSRP1 396176
## 15 ENSGALG00000010929 SPARCL1 422586
## 16 ENSGALG00000000949 HBEGF 395654
## 17 ENSGALG00000033226 FAM107B 426376&lt;/code>&lt;/pre>
&lt;pre class="r">&lt;code>summary(gene)&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## ENSEMBL SYMBOL ENTREZID
## Length:17 Length:17 Length:17
## Class :character Class :character Class :character
## Mode :character Mode :character Mode :character&lt;/code>&lt;/pre>
&lt;pre class="r">&lt;code># 同时可以导出到本地csv文件
#write.csv(as.data.frame(gene),&amp;quot;./gene.csv&amp;quot;,row.names =FALSE)&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="当然使用getbm也可以实现id转换但是结果会出现不少信息残缺还是推荐bitr" class="section level3">
&lt;h3>当然，使用&lt;code>getBM&lt;/code>也可以实现ID转换，但是结果会出现不少信息残缺，还是推荐&lt;code>bitr&lt;/code>&lt;/h3>
&lt;pre class="r">&lt;code>gene_A &amp;lt;- getBM(attributes=c(&amp;quot;ensembl_gene_id&amp;quot;, &amp;quot;external_gene_name&amp;quot;, &amp;quot;entrezgene_id&amp;quot;),
filters = &amp;#39;ensembl_gene_id&amp;#39;,
values = genelistA,
mart = chicken)
gene_B &amp;lt;- getBM(attributes=c(&amp;quot;ensembl_gene_id&amp;quot;, &amp;quot;external_gene_name&amp;quot;, &amp;quot;entrezgene_id&amp;quot;),
filters = &amp;#39;external_gene_name&amp;#39;,
values = genelistB,
mart = chicken)
gene_ABmegre &amp;lt;- rbind(gene_A,gene_B)
gene_ABmegre&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## ensembl_gene_id external_gene_name entrezgene_id
## 1 ENSGALG00000009628 425504
## 2 ENSGALG00000010316 422506
## 3 ENSGALG00000011190 PLAC8 100857411
## 4 ENSGALG00000011687 100859120
## 5 ENSGALG00000011806 100859223
## 6 ENSGALG00000015656 PALM2AKAP2 100533110
## 7 ENSGALG00000028774 S100A10 396506
## 8 ENSGALG00000000318 CSRP1 396176
## 9 ENSGALG00000036711 S100A11 396075
## 10 ENSGALG00000000949 HBEGF 395654
## 11 ENSGALG00000002015 SNCG 395392
## 12 ENSGALG00000013072 AKR1B10 395338
## 13 ENSGALG00000041826 S100A6 373951
## 14 ENSGALG00000034458 S100A1 100858258
## 15 ENSGALG00000010929 SPARCL1 422586
## 16 ENSGALG00000033226 FAM107B 426376
## 17 ENSGALG00000035317 ID3 395281&lt;/code>&lt;/pre>
&lt;pre class="r">&lt;code>summary(gene_ABmegre)&lt;/code>&lt;/pre>
&lt;pre>&lt;code>## ensembl_gene_id external_gene_name entrezgene_id
## Length:17 Length:17 Min. : 373951
## Class :character Class :character 1st Qu.: 395654
## Mode :character Mode :character Median : 422506
## Mean : 29929910
## 3rd Qu.:100533110
## Max. :100859223&lt;/code>&lt;/pre>
&lt;/div>
&lt;div id="小结" class="section level3">
&lt;h3>小结&lt;/h3>
&lt;p>学习使人懒惰，以前要花半小时进行EXCEL文件准备和ID转换，现在也就几分钟，成功偷懒~~&lt;/p>
&lt;/div>
&lt;div id="参考资料" class="section level3">
&lt;h3>&lt;del>参考资料&lt;/del>&lt;/h3>
&lt;/div></description></item><item><title>Shiny Server</title><link>/post/shiny-server/</link><pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate><guid>/post/shiny-server/</guid><description>&lt;h2 id="单细胞数据展示">单细胞数据展示&lt;/h2>
&lt;p>最近一段时间，实验室测了不少单细胞数据，为了方便实验室成员预览数据和调用数据，之前利用Shiny在服务器后台运行&lt;code>Rscript XX.R&lt;/code>进行数据在线展示，但是现在一下子增加很多数据，就开始考虑部署服务器版的Shiny Server了。未发表数据肯定不能托管，而且数据量也较大，VPS那点能力也hold不了，最后决定在自己服务器上面部署。&lt;/p>
&lt;h3 id="需求单细胞数据实验室内部展示">需求：单细胞数据实验室内部展示&lt;/h3>
&lt;h3 id="下载安装shiny-server">下载安装Shiny Server&lt;/h3>
&lt;p>
&lt;a href="https://rstudio.com/products/shiny/shiny-server/" target="_blank" rel="noopener">官网安装&lt;/a>服务器版本，参考官网步骤即可，提前安装好&lt;code>R&lt;/code>和&lt;code>shiny&lt;/code>等包。&lt;/p>
&lt;pre>&lt;code class="language-r">sudo apt-get install gdebi-core
wget https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-1.5.13.944-amd64.deb
sudo gdebi shiny-server-1.5.13.944-amd64.deb
&lt;/code>&lt;/pre>
&lt;h3 id="软件参数调试">软件参数调试&lt;/h3>
&lt;pre>&lt;code class="language-R">#打开配置文件，直接在VScode中打开编辑即可。
大赞VScode！！！！！！VScode YES！！！！！
/etc/shiny-server/shiny-server.conf
# Instruct Shiny Server to run applications as the user &amp;quot;shiny&amp;quot;
# 我改成了自己的账户，不需要新建立一个&amp;quot;shiny&amp;quot;用户
run_as 自己的用户名;
access_log /var/log/shiny-server/access.log default; # 增加记录访问
preserve_logs true; # 禁止自动清除日志
# Define a server that listens on port 3838
# 中国人喜欢的8888，哈哈哈~~
server {
listen 8888;
# Define a location at the base URL
location / {
# Host the directory of Shiny Apps stored in this directory
site_dir /srv/shiny-server;
# Log all Shiny output to files in this directory
log_dir /var/log/shiny-server;
# When a user visits the base URL rather than a particular application,
# an index of the applications available in this directory will be shown.
directory_index on;
}
#指向app.R代码位置
location /demo1{ #/demo1 访问app.R的网址后缀
app_dir /home/uu/shinyapp/demo1; #app.R所在文件夹
log_dir /var/log/shiny-server/demo1;#app.R日志所在文件夹
}
#重启服务器
sudo systemctl restart shiny-server
#应用启动失败，一般是依赖包问题，好好查看报错信息
#日志
sudo cat /var/log/shiny-server/demo/
#重启
sudo systemctl restart shiny-server;
#文件配置
sudo vim /etc/shiny-server/shiny-server.conf
&lt;/code>&lt;/pre>
&lt;h3 id="服务器相关代码官网文档不用再去翻官网了">服务器相关代码，官网文档，不用再去翻官网了~~&lt;/h3>
&lt;p>To start or stop the server manually, you can use the following commands.&lt;/p>
&lt;pre>&lt;code class="language-R">sudo systemctl start shiny-server
sudo systemctl stop shiny-server
&lt;/code>&lt;/pre>
&lt;p>You can restart the server with:&lt;/p>
&lt;pre>&lt;code class="language-R">sudo systemctl restart shiny-server
&lt;/code>&lt;/pre>
&lt;p>This command will shutdown all running Shiny processes, disconnect all open connections, and re-initialize the server.&lt;/p>
&lt;p>If you wish to reload the configuration but keep the server and all Shiny processes running without interruption, you can use the systemctl command to send a SIGHUP signal:&lt;/p>
&lt;pre>&lt;code class="language-R">sudo systemctl kill -s HUP --kill-who=main shiny-server
&lt;/code>&lt;/pre>
&lt;p>This will cause the server to re-initialize, but will not interrupt the current processes or any of the open connections to the server.&lt;/p>
&lt;p>You can check the status of the shiny-server service using:&lt;/p>
&lt;pre>&lt;code class="language-R">sudo systemctl status shiny-server
&lt;/code>&lt;/pre>
&lt;p>And finally, you can use the enable/disable commands to control whether Shiny Server should be run automatically at boot time:&lt;/p>
&lt;pre>&lt;code class="language-R">sudo systemctl enable shiny-server
sudo systemctl disable shiny-server
&lt;/code>&lt;/pre>
&lt;h3 id="shiny单独运行的代码备存">Shiny单独运行的代码备存&lt;/h3>
&lt;pre>&lt;code class="language-r">#! /usr/bin/env Rscript
setwd(&amp;quot;/home/labwang/Rstudio&amp;quot;)
options(repos=structure(c(CRAN=&amp;quot;https://mirrors.tuna.tsinghua.edu.cn/CRAN/&amp;quot;)))
library(shiny)
library(shinymanager)
runApp('/home/labwang/Rstudio/liver', port = 8887)
&lt;/code>&lt;/pre>
&lt;h3 id="页面调试">页面调试&lt;/h3>
&lt;p>确定代码没错，网页正常打开后，&lt;code>index.html&lt;/code>就根据自己的水平进行修改美化了，我就不停的删删删删了~~&lt;/p>
&lt;h3 id="参考资料">&lt;del>参考资料&lt;/del>&lt;/h3></description></item><item><title>Bioconda</title><link>/post/bioconda/</link><pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate><guid>/post/bioconda/</guid><description>&lt;p>&lt;strong>查看已安装的库&lt;/strong>&lt;/p>
&lt;pre>&lt;code>conda list
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>安装和更新&lt;/strong>&lt;/p>
&lt;pre>&lt;code>conda install XXX
conda update XXX
conda update --all #更新所有库
conda update conda #更新conda
conda updata anaconda #更新anaconda
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>环境相关&lt;/strong>&lt;/p>
&lt;pre>&lt;code>conda config --add channels conda-forge
conda config --add channels bioconda
conda create -n salmon salmon #创建环境
conda activate salmon #激活环境
conda deactivate #退出环境
#conda remove -n salmon #删除环境，不要乱删
conda env list #显示所有环境
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>清理软件&lt;/strong>&lt;/p>
&lt;pre>&lt;code>conda clean -p //删除多余的包
conda clean -y -all //删除所有的安装包及cache&lt;/code>&lt;/pre></description></item><item><title>Salmon代码备存</title><link>/post/salmon/</link><pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate><guid>/post/salmon/</guid><description>&lt;p>#Salmon代码备存&lt;/p>
&lt;p>听说你还可以分析scRNA&lt;/p>
&lt;pre>&lt;code>salmon alevin -l ISR -1 Pi_F_S1_L005_R1_001.fastq.gz -2 Pi_F_S1_L005_R2_001.fastq.gz --chromium -i ~/index/ggzjn_index/ -p 10 --dumpMtx -o alevin_output/ --tgMap txp2gene.txt --expectCells 18000
salmon alevin -l ISR -1 Pi_M_S1_L004_R1_001.fastq.gz -2 Pi_M_S1_L004_R2_001.fastq.gz --chromium -i ~/index/ggzjn_index/ -p 15 --dumpMtx -o alevin_output/ --tgMap txp2gene.txt --expectCells 18000
salmon alevin -l ISR -1 LI_F_v3_S1_L001_R1_001.fastq.gz -2 LI_F_v3_S1_L001_R2_001.fastq.gz --chromiumV3 -i ~/index/ggzjn_index/ -p 10 --dumpMtx --dumpFeatures -o LI_F_v3_alevin_output/ --tgMap txp2gene.txt --expectCells 25000
salmon alevin -l ISR -1 LI_M_v3_S1_L001_R1_001.fastq.gz -2 LI_M_v3_S1_L001_R2_001.fastq.gz --chromiumV3 -i ~/index/ggzjn_index/ -p 10 --dumpMtx --dumpFeatures -o LI_M_v3_alevin_output/ --tgMap txp2gene.txt --expectCells 25000
&lt;/code>&lt;/pre>
&lt;p>数据下载-plan A&lt;/p>
&lt;pre>&lt;code>#!/bin/bash
for fn in SRR1299{036..049};
do
samp=`basename ${fn}`
echo &amp;quot;Processing sample ${samp}&amp;quot;
ascp -QT -l 300m -P33001 -i ~/miniconda3/etc/asperaweb_id_dsa.openssh era-fasp@fasp.sra.ebi.ac.uk:/vol1/srr/SRR707/008/${fn} ./
mv ${fn} ${fn}.sra
done
&lt;/code>&lt;/pre>
&lt;p>数据下载-plan B&lt;/p>
&lt;pre>&lt;code>nano srr.txt
SRR1524238
SRR1524239
SRR1524240
SRR1524241
prefetch --option-file srr.txt -O ./
prefetch -t ascp -a &amp;quot;/home/labwang/.aspera/connect/bin/ascp|/home/labwang/.aspera/connect/etc/asperaweb_id_dsa.openssh&amp;quot; --option-file srr.txt -O ./
# 啊，升级了好麻烦啊！！！
prefetch -t ascp -a &amp;quot;/home/labwang/.aspera/connect/bin/ascp|/home/labwang/.aspera/connect/etc/asperaweb_id_dsa.openssh&amp;quot; --option-file srr.txt
cd /usr/local/ncbi/sra-tools/bin 然后 ./vdb-config -i 然后 巴拉巴拉~~~
&lt;/code>&lt;/pre>
&lt;p>分析&lt;/p>
&lt;pre>&lt;code>salmon index -t Taeniopygia_guttata.taeGut3.2.4.cdna.all.fa -i finch2_index
#!/bin/bash
for fn in SRR7072{158..175};
do
path=$(pwd)
samp=`basename ${fn}`
echo &amp;quot;Processing sample ${samp}&amp;quot;
pfastq-dump -t 20 --split-files --gzip -O ${path}/fastq ${samp}.sra
done
#!/bin/bash
for fn in SRR7072{158..175};
do
path=$(pwd)
echo &amp;quot;Processing sample ${fn}&amp;quot;
salmon quant -i ~/index/ggzjn_index --validateMappings -l A \
-1 ${path}/fastq/${fn}_1.fastq.gz \
-2 ${path}/fastq/${fn}_2.fastq.gz \
-p 20 -o ${path}/quant/${fn}_quant
done
bash /data3/PI-LV/R/DESEQ2.sh -f result-DE.txt -s samplefiles.txt -p compare_pair.txt
bash /data3/PI-LV/R/DESEQ2.sh -f result-DE.txt -s samplefiles.txt -p compare_pair.txt -F 0.5 -P 0.01
library(&amp;quot;tximport&amp;quot;)
library(readr)
dir &amp;lt;- &amp;quot;D:/Users/zjn-lab/Documents/salmon&amp;quot;
list.files(dir)
sample &amp;lt;- paste0(&amp;quot;ERR348&amp;quot;,seq(560,588),&amp;quot;_quant&amp;quot;)
files &amp;lt;- file.path(dir,&amp;quot;quant&amp;quot;,sample,&amp;quot;quant.sf&amp;quot;)
names(files) &amp;lt;- paste0(&amp;quot;sample&amp;quot;,c(1:3))
all(file.exists(files))
head(files)
tx2gene &amp;lt;- read_csv(file.path(dir, &amp;quot;tx2gene.gencode.v97.csv&amp;quot;))
head(tx2gene)
txi &amp;lt;- tximport(files, type = &amp;quot;salmon&amp;quot;, tx2gene = tx2gene)
head(txi)
names(txi)
head(txi$abundance)
head(txi$length)
head(txi$counts)
head(txi$countsFromAbundance)
#write.table(txi$abundance, &amp;quot;abundance.txt&amp;quot;, sep=&amp;quot;\t&amp;quot;, quote=F)
write.csv(txi$abundance, &amp;quot;abundance.csv&amp;quot;, quote=F)
txi.tx &amp;lt;- tximport(files, type = &amp;quot;salmon&amp;quot;, txOut = TRUE)
txi.sum &amp;lt;- summarizeToGene(txi.tx, tx2gene)
all.equal(txi$counts, txi.sum$counts)
head(txi.tx)
names(txi.tx)
head(txi.tx$abundance)
head(txi.tx$length)
head(txi.tx$counts)
head(txi.tx$countsFromAbundance)
library(DESeq2)
sampleTable &amp;lt;- data.frame(condition = factor(rep(c(&amp;quot;untreated&amp;quot;, &amp;quot;treated&amp;quot;), each = 4)))
rownames(sampleTable) &amp;lt;- colnames(txi$counts)
dds &amp;lt;- DESeqDataSetFromTximport(txi, sampleTable, ~condition)
dds
sampleTable
keep &amp;lt;- rowSums(counts(dds)) &amp;gt;= 10
dds &amp;lt;- dds[keep,]
&lt;/code>&lt;/pre>
&lt;p>数据质检过滤&lt;/p>
&lt;pre>&lt;code>#!/bin/bash
for fn in SRR1524{238..249};
do
path=$(pwd)
samp=`basename ${fn}`
echo &amp;quot;Processing sample ${samp}&amp;quot;
fastqc -o ${path}/fastqc -t 50 ${path}/fastq/${fn}_1.fastq.gz
fastqc -o ${path}/fastqc -t 50 ${path}/fastq/${fn}_2.fastq.gz
done
multiqc .
#!/bin/bash
for fn in SRR1524{238..249};
do
samp=`basename ${fn}`
echo &amp;quot;Processing sample ${samp}&amp;quot;
trimmomatic PE -phred33 -threads 20 ${fn}_1.fastq.gz ${fn}_2.fastq.gz ${fn}_paired_1.fastq.gz ${fn}_unpaired_1.fastq.gz ${fn}_paired_2.fastq.gz ${fn}_unpaired_2.fastq.gz ILLUMINACLIP:/home/labwang/miniconda3/share/trimmomatic-0.38-1/adapters/TruSeq3-PE.fa:2:30:10 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:36
rm -r ${fn}_unpaired_1.fastq.gz
rm -r ${fn}_unpaired_2.fastq.gz
rm -r ${fn}_1.fastq.gz
rm -r ${fn}_2.fastq.gz
done
去头去尾
trimmomatic PE -phred33 -threads 20 ${fn}_1.fq.gz ${fn}_2.fq.gz ${fn}_paired_1.fastq.gz ${fn}_unpaired_1.fastq.gz ${fn}_paired_2.fastq.gz ${fn}_unpaired_2.fastq.gz CROP:89 HEADCROP:10 MINLEN:36&lt;/code>&lt;/pre></description></item><item><title>Academic: the website builder for Hugo</title><link>/post/getting-started/</link><pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate><guid>/post/getting-started/</guid><description>&lt;p>&lt;strong>Create a free website with Academic using Markdown, Jupyter, or RStudio. Choose a beautiful color theme and build anything with the Page Builder - over 40 &lt;em>widgets&lt;/em>, &lt;em>themes&lt;/em>, and &lt;em>language packs&lt;/em> included!&lt;/strong>&lt;/p>
&lt;p>
&lt;a href="https://academic-demo.netlify.com/" target="_blank" rel="noopener">Check out the latest &lt;strong>demo&lt;/strong>&lt;/a> of what you&amp;rsquo;ll get in less than 10 minutes, or
&lt;a href="https://sourcethemes.com/academic/#expo" target="_blank" rel="noopener">view the &lt;strong>showcase&lt;/strong>&lt;/a> of personal, project, and business sites.&lt;/p>
&lt;ul>
&lt;li>👉
&lt;a href="#install">&lt;strong>Get Started&lt;/strong>&lt;/a>&lt;/li>
&lt;li>📚
&lt;a href="https://sourcethemes.com/academic/docs/" target="_blank" rel="noopener">View the &lt;strong>documentation&lt;/strong>&lt;/a>&lt;/li>
&lt;li>💬
&lt;a href="https://discourse.gohugo.io" target="_blank" rel="noopener">&lt;strong>Ask a question&lt;/strong> on the forum&lt;/a>&lt;/li>
&lt;li>👥
&lt;a href="https://spectrum.chat/academic" target="_blank" rel="noopener">Chat with the &lt;strong>community&lt;/strong>&lt;/a>&lt;/li>
&lt;li>🐦 Twitter:
&lt;a href="https://twitter.com/source_themes" target="_blank" rel="noopener">@source_themes&lt;/a>
&lt;a href="https://twitter.com/GeorgeCushen" target="_blank" rel="noopener">@GeorgeCushen&lt;/a>
&lt;a href="https://twitter.com/search?q=%23MadeWithAcademic&amp;amp;src=typd" target="_blank" rel="noopener">#MadeWithAcademic&lt;/a>&lt;/li>
&lt;li>💡
&lt;a href="https://github.com/gcushen/hugo-academic/issues" target="_blank" rel="noopener">Request a &lt;strong>feature&lt;/strong> or report a &lt;strong>bug&lt;/strong>&lt;/a>&lt;/li>
&lt;li>⬆️ &lt;strong>Updating?&lt;/strong> View the
&lt;a href="https://sourcethemes.com/academic/docs/update/" target="_blank" rel="noopener">Update Guide&lt;/a> and
&lt;a href="https://sourcethemes.com/academic/updates/" target="_blank" rel="noopener">Release Notes&lt;/a>&lt;/li>
&lt;li>❤ &lt;strong>Support development&lt;/strong> of Academic:
&lt;ul>
&lt;li>☕️
&lt;a href="https://paypal.me/cushen" target="_blank" rel="noopener">&lt;strong>Donate a coffee&lt;/strong>&lt;/a>&lt;/li>
&lt;li>💵
&lt;a href="https://www.patreon.com/cushen" target="_blank" rel="noopener">Become a backer on &lt;strong>Patreon&lt;/strong>&lt;/a>&lt;/li>
&lt;li>🖼️
&lt;a href="https://www.redbubble.com/people/neutreno/works/34387919-academic" target="_blank" rel="noopener">Decorate your laptop or journal with an Academic &lt;strong>sticker&lt;/strong>&lt;/a>&lt;/li>
&lt;li>👕
&lt;a href="https://academic.threadless.com/" target="_blank" rel="noopener">Wear the &lt;strong>T-shirt&lt;/strong>&lt;/a>&lt;/li>
&lt;li>👩‍💻
&lt;a href="https://sourcethemes.com/academic/docs/contribute/" target="_blank" rel="noopener">&lt;strong>Contribute&lt;/strong>&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;figure>
&lt;a data-fancybox="" href="https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png" data-caption="Academic is mobile first with a responsive design to ensure that your site looks stunning on every device.">
&lt;img src="https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png" alt="" >
&lt;/a>
&lt;figcaption>
Academic is mobile first with a responsive design to ensure that your site looks stunning on every device.
&lt;/figcaption>
&lt;/figure>
&lt;p>&lt;strong>Key features:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Page builder&lt;/strong> - Create &lt;em>anything&lt;/em> with
&lt;a href="https://sourcethemes.com/academic/docs/page-builder/" target="_blank" rel="noopener">&lt;strong>widgets&lt;/strong>&lt;/a> and
&lt;a href="https://sourcethemes.com/academic/docs/writing-markdown-latex/" target="_blank" rel="noopener">&lt;strong>elements&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;strong>Edit any type of content&lt;/strong> - Blog posts, publications, talks, slides, projects, and more!&lt;/li>
&lt;li>&lt;strong>Create content&lt;/strong> in
&lt;a href="https://sourcethemes.com/academic/docs/writing-markdown-latex/" target="_blank" rel="noopener">&lt;strong>Markdown&lt;/strong>&lt;/a>,
&lt;a href="https://sourcethemes.com/academic/docs/jupyter/" target="_blank" rel="noopener">&lt;strong>Jupyter&lt;/strong>&lt;/a>, or
&lt;a href="https://sourcethemes.com/academic/docs/install/#install-with-rstudio" target="_blank" rel="noopener">&lt;strong>RStudio&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;strong>Plugin System&lt;/strong> - Fully customizable
&lt;a href="https://sourcethemes.com/academic/themes/" target="_blank" rel="noopener">&lt;strong>color&lt;/strong> and &lt;strong>font themes&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;strong>Display Code and Math&lt;/strong> - Code highlighting and
&lt;a href="https://en.wikibooks.org/wiki/LaTeX/Mathematics" target="_blank" rel="noopener">LaTeX math&lt;/a> supported&lt;/li>
&lt;li>&lt;strong>Integrations&lt;/strong> -
&lt;a href="https://analytics.google.com" target="_blank" rel="noopener">Google Analytics&lt;/a>,
&lt;a href="https://disqus.com" target="_blank" rel="noopener">Disqus commenting&lt;/a>, Maps, Contact Forms, and more!&lt;/li>
&lt;li>&lt;strong>Beautiful Site&lt;/strong> - Simple and refreshing one page design&lt;/li>
&lt;li>&lt;strong>Industry-Leading SEO&lt;/strong> - Help get your website found on search engines and social media&lt;/li>
&lt;li>&lt;strong>Media Galleries&lt;/strong> - Display your images and videos with captions in a customizable gallery&lt;/li>
&lt;li>&lt;strong>Mobile Friendly&lt;/strong> - Look amazing on every screen with a mobile friendly version of your site&lt;/li>
&lt;li>&lt;strong>Multi-language&lt;/strong> - 15+ language packs including English, 中文, and Português&lt;/li>
&lt;li>&lt;strong>Multi-user&lt;/strong> - Each author gets their own profile page&lt;/li>
&lt;li>&lt;strong>Privacy Pack&lt;/strong> - Assists with GDPR&lt;/li>
&lt;li>&lt;strong>Stand Out&lt;/strong> - Bring your site to life with animation, parallax backgrounds, and scroll effects&lt;/li>
&lt;li>&lt;strong>One-Click Deployment&lt;/strong> - No servers. No databases. Only files.&lt;/li>
&lt;/ul>
&lt;h2 id="themes">Themes&lt;/h2>
&lt;p>Academic comes with &lt;strong>automatic day (light) and night (dark) mode&lt;/strong> built-in. Alternatively, visitors can choose their preferred mode - click the sun/moon icon in the top right of the
&lt;a href="https://academic-demo.netlify.com/" target="_blank" rel="noopener">Demo&lt;/a> to see it in action! Day/night mode can also be disabled by the site admin in &lt;code>params.toml&lt;/code>.&lt;/p>
&lt;p>
&lt;a href="https://sourcethemes.com/academic/themes/" target="_blank" rel="noopener">Choose a stunning &lt;strong>theme&lt;/strong> and &lt;strong>font&lt;/strong>&lt;/a> for your site. Themes are fully
&lt;a href="https://sourcethemes.com/academic/docs/customization/#custom-theme" target="_blank" rel="noopener">customizable&lt;/a>.&lt;/p>
&lt;h2 id="ecosystem">Ecosystem&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>
&lt;a href="https://github.com/sourcethemes/academic-admin" target="_blank" rel="noopener">Academic Admin&lt;/a>:&lt;/strong> An admin tool to import publications from BibTeX or import assets for an offline site&lt;/li>
&lt;li>&lt;strong>
&lt;a href="https://github.com/sourcethemes/academic-scripts" target="_blank" rel="noopener">Academic Scripts&lt;/a>:&lt;/strong> Scripts to help migrate content to new versions of Academic&lt;/li>
&lt;/ul>
&lt;h2 id="install">Install&lt;/h2>
&lt;p>You can choose from one of the following four methods to install:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://sourcethemes.com/academic/docs/install/#install-with-web-browser" target="_blank" rel="noopener">&lt;strong>one-click install using your web browser (recommended)&lt;/strong>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://sourcethemes.com/academic/docs/install/#install-with-git" target="_blank" rel="noopener">install on your computer using &lt;strong>Git&lt;/strong> with the Command Prompt/Terminal app&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://sourcethemes.com/academic/docs/install/#install-with-zip" target="_blank" rel="noopener">install on your computer by downloading the &lt;strong>ZIP files&lt;/strong>&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://sourcethemes.com/academic/docs/install/#install-with-rstudio" target="_blank" rel="noopener">install on your computer with &lt;strong>RStudio&lt;/strong>&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Then
&lt;a href="https://sourcethemes.com/academic/docs/get-started/" target="_blank" rel="noopener">personalize and deploy your new site&lt;/a>.&lt;/p>
&lt;h2 id="updating">Updating&lt;/h2>
&lt;p>
&lt;a href="https://sourcethemes.com/academic/docs/update/" target="_blank" rel="noopener">View the Update Guide&lt;/a>.&lt;/p>
&lt;p>Feel free to &lt;em>star&lt;/em> the project on
&lt;a href="https://github.com/gcushen/hugo-academic/" target="_blank" rel="noopener">Github&lt;/a> to help keep track of
&lt;a href="https://sourcethemes.com/academic/updates" target="_blank" rel="noopener">updates&lt;/a>.&lt;/p>
&lt;h2 id="license">License&lt;/h2>
&lt;p>Copyright 2016-present
&lt;a href="https://georgecushen.com" target="_blank" rel="noopener">George Cushen&lt;/a>.&lt;/p>
&lt;p>Released under the
&lt;a href="https://github.com/gcushen/hugo-academic/blob/master/LICENSE.md" target="_blank" rel="noopener">MIT&lt;/a> license.&lt;/p></description></item></channel></rss>