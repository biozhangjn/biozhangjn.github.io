<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux | Jiannan Zhang</title><link>/tags/linux/</link><atom:link href="/tags/linux/index.xml" rel="self" type="application/rss+xml"/><description>Linux</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Wed, 08 Apr 2020 00:00:00 +0000</lastBuildDate><image><url>img/map[gravatar:%!s(bool=false) shape:circle]</url><title>Linux</title><link>/tags/linux/</link></image><item><title>Rstudio-server 相关汇总</title><link>/post/linux/rstudio-server-%E7%9B%B8%E5%85%B3%E6%B1%87%E6%80%BB/</link><pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate><guid>/post/linux/rstudio-server-%E7%9B%B8%E5%85%B3%E6%B1%87%E6%80%BB/</guid><description>&lt;p>预期准备再入一个阿里云的CES做在线服务器，虽然买一个新的高性能服务器可能更理想，但是想着懒得维护另外一台服务器了，不如现在开始利用云服务，说不定以后有钱了在云上玩高性能服务器呢~~&lt;/p>
&lt;p>下面就记录Rstudio server相关信息，持续更新~~&lt;/p>
&lt;p>总的来说，信息是不断进步的，在随时关注官网等资源的同时，自己记录一些基本的操作，省去google的时间也是极好的，note就该发挥自己的作用~~&lt;/p>
&lt;h3 id="基本代码">基本代码&lt;/h3>
&lt;pre>&lt;code class="language-shell">#查看是否安装正确
sudo rstudio-server verify-installation
## 启动
sudo rstudio-server start
## 查看状态
sudo rstudio-server status
## 停止
sudo rstudio-server stop
## 重启
sudo rstudio-server restart
## 查看服务端ip地址
ifconfig
&lt;/code>&lt;/pre>
&lt;h3 id="卸载软件">卸载软件&lt;/h3>
&lt;pre>&lt;code class="language-shell"># 安装的信息还是直接去官网安装最新版本
sudo apt-get autoremove --purge rstudio-server
&lt;/code>&lt;/pre>
&lt;h3 id="添加用户">添加用户&lt;/h3>
&lt;pre>&lt;code class="language-shell"># 添加用户的命令是linux中的命令
# 添加用户组
groupadd Rstudiosrv
# 添加用户wdmd 在指定的组Rstudiosrv内
useradd zjn -g Rstudiosrv;
# 设置该用户的密码
passwd zjn
# 删除用户和组
userdel zjn
groupdel Rstudiosrv
# 显示用户信息
id user
cat /etc/passwd
&lt;/code>&lt;/pre>
&lt;h3 id="修改端口-and-防火墙写下来就不用翻onenote或者google了都在自己的note里面">修改端口 and 防火墙，写下来就不用翻onenote或者google了，都在自己的note里面。&lt;/h3>
&lt;pre>&lt;code class="language-shell"># 给 RStudio 分配访问端口
echo &amp;quot;www-port=8181&amp;quot; | sudo tee -a /etc/rstudio/rserver.conf
# 将 R 软件路径告诉 RStudio Server，看情况设置
echo &amp;quot;rsession-which-r=/usr/local/bin/R-devel&amp;quot; | sudo tee -a /etc/rstudio/rserver.conf
# 安装 firewalld 防火墙管理工具
sudo apt-get install -y firewalld
# 打开8181端口
sudo firewall-cmd --zone=public --add-port=8181/tcp --permanent
# 重启防火墙使配置生效
sudo firewall-cmd --reload
# 重启你懂的
sudo rstudio-server restart
&lt;/code>&lt;/pre>
&lt;h3 id="请合理利用rstudio和github的关联功能比如创建带版本控制的project">请合理利用Rstudio和github的关联功能，比如创建带版本控制的project&lt;/h3>
&lt;hr>
&lt;h3 id="服务器安装r等相关">服务器安装R等相关&lt;/h3>
&lt;p>安装最新的 Git 和 libgit2-dev 库，所以添加两个源&lt;/p>
&lt;pre>&lt;code class="language-shell">sudo add-apt-repository -y ppa:jeroen/libgit2
sudo add-apt-repository -y ppa:git-core/ppa
# 移除
sudo add-apt-repository --remove ppa:jeroen/libgit2
&lt;/code>&lt;/pre>
&lt;h4 id="解决系统依赖问题重点将r-base-dev-所需的依赖全部装上有了-build-dep-就不用一个一个去找了">解决系统依赖问题，重点，将r-base-dev 所需的依赖全部装上，有了 build-dep 就不用一个一个去找了&lt;/h4>
&lt;pre>&lt;code class="language-shell"># Ubuntu
sudo apt-get update &amp;amp;&amp;amp; sudo apt-get build-dep r-base-dev
# Fedora
sudo dnf update &amp;amp;&amp;amp; sudo dnf builddep R-devel
# CentOS
sudo yum update &amp;amp;&amp;amp; sudo yum install -y yum-utils &amp;amp;&amp;amp; sudo yum-builddep R-devel
&lt;/code>&lt;/pre>
&lt;p>其它的系统依赖，供常用的 R 包安装使用，常用的 R 包有 xml2、ssl、git2r、curl、openssl、magick、nloptr、igraph、RcppGSL。来来来，空间大的都装上~ 其实，最好还是安装错误提示缺啥安装啥比较好~&lt;/p>
&lt;pre>&lt;code class="language-shell">sudo apt-get install -y libxml2-dev libssl-dev libgit2-dev \
libnlopt-dev libxmu-dev libglpk-dev libgsl-dev \
ghostscript imagemagick optipng subversion jags \
libcurl4-openssl-dev libmagick++-dev \
texlive-xetex texlive-lang-chinese
&lt;/code>&lt;/pre>
&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;ul>
&lt;li>
&lt;a href="https://www.xiangyunhuang.com.cn/2019/05/r-devel-ubuntu/" target="_blank" rel="noopener">从源码安装最新的开发版R&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>未完待续&amp;hellip;&lt;/p></description></item><item><title>Ubuntu设置虚拟内存</title><link>/post/linux/ubuntu%E8%AE%BE%E7%BD%AE%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/</link><pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate><guid>/post/linux/ubuntu%E8%AE%BE%E7%BD%AE%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/</guid><description>&lt;p>现在数据展示越来越离不开VPS/CES了，但是买的服务一般都是1G内存的（大写的穷），所以一般买了VPS习惯性的会增加虚拟内存，记下免得每次都去google。&lt;/p>
&lt;h3 id="创建虚拟映像文件">创建虚拟映像文件：&lt;/h3>
&lt;pre>&lt;code class="language-shell">sudo swapon --show #查看SWAP分区
sudo dd if=/dev/zero of=swapfile bs=1024 count=1024000
&lt;/code>&lt;/pre>
&lt;p>虚拟内存大小一般接近物理内存就可以了。&lt;/p>
&lt;h3 id="将虚拟映像文件转换成swap文件">将虚拟映像文件转换成swap文件：&lt;/h3>
&lt;pre>&lt;code class="language-SHELL">sudo mkswap -f swapfile
chmod 0600 swapfile
&lt;/code>&lt;/pre>
&lt;h3 id="激活-swap">激活 swap：&lt;/h3>
&lt;pre>&lt;code class="language-shell">sudo swapon swapfile
&lt;/code>&lt;/pre>
&lt;p>然后输入&lt;code>free&lt;/code>查看内存信息，就可以发现虚拟内存已经启用。&lt;/p>
&lt;p>TIPS：重启之后，需要重新激活swap，建议将激活命令写入开机启动项喔~~&lt;/p>
&lt;h3 id="将激活命令写入开机启动项">将激活命令写入开机启动项：&lt;/h3>
&lt;pre>&lt;code class="language-shell">sudo cp /etc/fstab /etc/fstab.bak
echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab #学到么？
shutdown -r now #重启看下free
&lt;/code>&lt;/pre>
&lt;h3 id="关闭和删除原来的swapfile">关闭和删除原来的swapfile：&lt;/h3>
&lt;pre>&lt;code class="language-shell">sudo swapoff swapfile
sudo rm /swapfile
&lt;/code>&lt;/pre>
&lt;p>over~~~&lt;/p></description></item></channel></rss>